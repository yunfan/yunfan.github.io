<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>geek42 - geek42</title><link href="https://yunfan.github.io/" rel="alternate"></link><link href="https://yunfan.github.io/feeds/geek42.atom.xml" rel="self"></link><id>https://yunfan.github.io/</id><updated>2015-05-19T18:30:00+08:00</updated><subtitle>虽千万人，吾往矣</subtitle><entry><title>关于医疗方面的一些想法</title><link href="https://yunfan.github.io/medical-thoughts.html" rel="alternate"></link><published>2015-05-19T18:30:00+08:00</published><updated>2015-05-19T18:30:00+08:00</updated><author><name>geek42</name></author><id>tag:yunfan.github.io,2015-05-19:/medical-thoughts.html</id><summary type="html">&lt;div class="section" id="id2"&gt;
&lt;h2&gt;引子&lt;/h2&gt;
&lt;p&gt;这个想法起因于我母亲去医院动手术，做得是乳房囊肿切除，&lt;/p&gt;
&lt;p&gt;算是小手术，所以术后只需要吊几天水，也就ok了。我在术后的&lt;/p&gt;
&lt;p&gt;几天内也偶尔去医院看望下她，感觉到当前的医院有不少可以&lt;/p&gt;
&lt;p&gt;改进的地方。&lt;/p&gt;
&lt;p&gt;为何要选医院呢？毕竟可以改进的地方很多，我的回答是，因为&lt;/p&gt;
&lt;p&gt;医患矛盾是个热点，这方面的制度改进讨论很多，我也想从其他&lt;/p&gt;
&lt;p&gt;角度来为这个热点多贡献几个topic，以求能有进步，这个真正&lt;/p&gt;
&lt;p&gt;是关系我们所有人的事业。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;我观察到的一些小问题&lt;/h2&gt;
&lt;p&gt;在医院期间，观察到一些小问题。兹列于下&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;家属很累，主要在于要不停盯输液的袋子&lt;/li&gt;
&lt;li&gt;医患之间容易就小事扯皮，且很难去追溯起因&lt;/li&gt;
&lt;li&gt;床位紧张&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;我的分析与应对方案&lt;/h2&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;关于家属很累&lt;/h3&gt;
&lt;p&gt;因为我是做it的，而且我本身又喜欢自动化，所以一下子我就&lt;/p&gt;
&lt;p&gt;想到了输液为何不能自动去提醒呢？这个其实做起来成本很小&lt;/p&gt;
&lt;p&gt;医院的输液那个钩子改造下，电子化，带上厨房电子秤的元件，&lt;/p&gt;
&lt;p&gt;然后弄个触摸屏就可以了，&lt;/p&gt;
&lt;p&gt;每个输液袋是有标准重量的，护士把袋子挂在钩子上后，输入个&lt;/p&gt;
&lt;p&gt;袋子的重量，则里面的芯片可以自动监控钩子重量，检测到输液&lt;/p&gt;
&lt;p&gt;快输完的时候，就自动给护士站那边发个报警信号即可了。这个 …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id2"&gt;
&lt;h2&gt;引子&lt;/h2&gt;
&lt;p&gt;这个想法起因于我母亲去医院动手术，做得是乳房囊肿切除，&lt;/p&gt;
&lt;p&gt;算是小手术，所以术后只需要吊几天水，也就ok了。我在术后的&lt;/p&gt;
&lt;p&gt;几天内也偶尔去医院看望下她，感觉到当前的医院有不少可以&lt;/p&gt;
&lt;p&gt;改进的地方。&lt;/p&gt;
&lt;p&gt;为何要选医院呢？毕竟可以改进的地方很多，我的回答是，因为&lt;/p&gt;
&lt;p&gt;医患矛盾是个热点，这方面的制度改进讨论很多，我也想从其他&lt;/p&gt;
&lt;p&gt;角度来为这个热点多贡献几个topic，以求能有进步，这个真正&lt;/p&gt;
&lt;p&gt;是关系我们所有人的事业。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;我观察到的一些小问题&lt;/h2&gt;
&lt;p&gt;在医院期间，观察到一些小问题。兹列于下&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;家属很累，主要在于要不停盯输液的袋子&lt;/li&gt;
&lt;li&gt;医患之间容易就小事扯皮，且很难去追溯起因&lt;/li&gt;
&lt;li&gt;床位紧张&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;我的分析与应对方案&lt;/h2&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;关于家属很累&lt;/h3&gt;
&lt;p&gt;因为我是做it的，而且我本身又喜欢自动化，所以一下子我就&lt;/p&gt;
&lt;p&gt;想到了输液为何不能自动去提醒呢？这个其实做起来成本很小&lt;/p&gt;
&lt;p&gt;医院的输液那个钩子改造下，电子化，带上厨房电子秤的元件，&lt;/p&gt;
&lt;p&gt;然后弄个触摸屏就可以了，&lt;/p&gt;
&lt;p&gt;每个输液袋是有标准重量的，护士把袋子挂在钩子上后，输入个&lt;/p&gt;
&lt;p&gt;袋子的重量，则里面的芯片可以自动监控钩子重量，检测到输液&lt;/p&gt;
&lt;p&gt;快输完的时候，就自动给护士站那边发个报警信号即可了。这个&lt;/p&gt;
&lt;p&gt;实现起来也不难，假设输液袋400克 挂上钩子后芯片检测到的总&lt;/p&gt;
&lt;p&gt;重量是x克 则只要在他检测到总重量还有x-380克的时候就可以发&lt;/p&gt;
&lt;p&gt;个信号了，这个对芯片要求也不高，电子秤我买过，也不过是几&lt;/p&gt;
&lt;p&gt;十块钱而已&lt;/p&gt;
&lt;p&gt;更进一步来说&lt;/p&gt;
&lt;p&gt;我注意到 &lt;strong&gt;输液并不需要每个袋子都扎一次血管&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;所以我觉得一次输液三袋的情况，可以配合前述的自动检测的钩子&lt;/p&gt;
&lt;p&gt;让其在检测到输液快输完的时候，不是只发个信号，而是自动更换&lt;/p&gt;
&lt;p&gt;输液袋，这个 &lt;strong&gt;自动更换&lt;/strong&gt; 要如何实现呢？ 可以考虑把那个钩子&lt;/p&gt;
&lt;p&gt;改进成类似 &lt;strong&gt;左轮手枪弹仓&lt;/strong&gt; 那种可以旋转的仓体，护士只需要&lt;/p&gt;
&lt;p&gt;提前把要输液的袋子都安放进去，确保输液袋的口子对齐即可。&lt;/p&gt;
&lt;p&gt;这两点如果能够做到，我相信能大大减少陪护家属的劳累，使其能将精力&lt;/p&gt;
&lt;p&gt;更多投入在安抚病人上。&lt;/p&gt;
&lt;p&gt;如果不能全做到，至少做到第一点是比较容易的。至于第二点，更多的是&lt;/p&gt;
&lt;p&gt;希望能减少护士们的劳累，现在许多人经常抨击医院的医生对人冷漠，护&lt;/p&gt;
&lt;p&gt;士态度不好，其实仔细想想，也不能怪他们，医生见得病患多了，在他那&lt;/p&gt;
&lt;p&gt;你只是个数字而已，护士则更是收入比较低，工作又很劳累，压力还大，&lt;/p&gt;
&lt;p&gt;我觉得在还没有大幅度提高护士收入的情况下，可以先考虑采用我的第二&lt;/p&gt;
&lt;p&gt;点建议降低其日常工作的重复劳动，如此护士们可以从这些大量低级重复&lt;/p&gt;
&lt;p&gt;劳动中解放出来，从事一些较为复杂的护理工作，一来因为劳动量降低，&lt;/p&gt;
&lt;p&gt;可能让其身心愉悦，二来能够给他们较多的空闲时间去关注职业提升计划&lt;/p&gt;
&lt;p&gt;或其他追求人生意义的事项。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;关于医患之间扯皮&lt;/h3&gt;
&lt;p&gt;可以考虑 &lt;strong&gt;普通病房也设立24小时的视频直播&lt;/strong&gt; 之所以是直播在于假如&lt;/p&gt;
&lt;p&gt;家属对医院方不信任，可以直播期间自己录制下来，而不是等到事后来追&lt;/p&gt;
&lt;p&gt;视频被告知摄像头坏了。同时医院方自己也可以录制下来，用于真的碰到&lt;/p&gt;
&lt;p&gt;无理取闹的家属时的证据，我想这个对于日渐讲法的贵国社会来说，是一&lt;/p&gt;
&lt;p&gt;个很有意义的事情，关于这个想法，我觉得是具有普遍意义的，将来我会&lt;/p&gt;
&lt;p&gt;专门撰写一遍政府部门改进意见的文章，会把这个包括在内。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;关于床位紧张&lt;/h3&gt;
&lt;p&gt;这个可以说的就多了，我觉得究其原因在于，医院就跟铁路部门一样，平&lt;/p&gt;
&lt;p&gt;时可能还觉得房间多，某些时刻突然觉得房间少，更郁闷的是，医院的这&lt;/p&gt;
&lt;p&gt;个随机性更强，不像铁路部门至少懂得某些日期会有大大的高峰。&lt;/p&gt;
&lt;p&gt;另外一个原因是医院的一些处理流程并不太合理，例如我母亲术后需要待&lt;/p&gt;
&lt;p&gt;医院一周，其实只有前三天需要输液，而后面纯粹是在等手术拆线，假如&lt;/p&gt;
&lt;p&gt;手术缝合线可以不用拆，过个把月溶掉，则她只需要待那三天就够了，&lt;/p&gt;
&lt;p&gt;后面几天床位可以腾出来给更需要的人&lt;/p&gt;
&lt;p&gt;床位紧张说到底就是个供应问题，任何供应问题都可以靠四个字的方向来&lt;/p&gt;
&lt;p&gt;解决 即 &lt;strong&gt;开源节流&lt;/strong&gt;&lt;/p&gt;
&lt;div class="section" id="id8"&gt;
&lt;h4&gt;开源&lt;/h4&gt;
&lt;p&gt;开源就是增加供应，对于输液的病人，如果有我前述的那种自动化输液机械&lt;/p&gt;
&lt;p&gt;是完全不需要非得待在医院里的，关于这一点，我觉得除了技术上的改进外&lt;/p&gt;
&lt;p&gt;国家政策的支持也很重要，可以考虑让医生给开术后处理意见书，类似处方&lt;/p&gt;
&lt;p&gt;那样中性，则患者拿着处理意见书，可以去任意一家专门的护理场所去接受&lt;/p&gt;
&lt;p&gt;处理，当然前提是国家开放和鼓励民间资本进驻。&lt;/p&gt;
&lt;p&gt;上面说的是术后的流程优化，而对于术前，其实也是可以优化，这个我深有&lt;/p&gt;
&lt;p&gt;感触，大多数的患者时间，尤其是第一天多是卡在各种检查排队上，我认为&lt;/p&gt;
&lt;p&gt;如同术后护理一样，术前检车也可以分离开来，事实上目前就有许多专门的&lt;/p&gt;
&lt;p&gt;体检医院，我觉得也可以考虑检测独立开来，一来缓解医院的压力，二来患&lt;/p&gt;
&lt;p&gt;者可以参考多家检测结果，有利于对一些顽固患者的说服工作，比如坚持认&lt;/p&gt;
&lt;p&gt;为自己有病是医院不给治那种。最后通过独立的检测可以分流不少患者，像&lt;/p&gt;
&lt;p&gt;我们这里市医院就非常地忙，而县医院则不是那么忙，究其原因无非是市医&lt;/p&gt;
&lt;p&gt;院设备先进，人员有经验，后者姑且不论，至于前者，考虑到医疗事业算是&lt;/p&gt;
&lt;p&gt;一种公共事业，国家可以考虑给每个乡都普及各种日常检测设备，让群众&lt;/p&gt;
&lt;p&gt;在家门口就可以检测，同时早发现早治疗也能减轻医院的压力，小问题就近&lt;/p&gt;
&lt;p&gt;处理可以缓解大医院的压力等等&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h4&gt;节流&lt;/h4&gt;
&lt;p&gt;节流也就是削减支出，减少不必要的浪费，床位如果真的紧张，因为尽可能&lt;/p&gt;
&lt;p&gt;地留给真正有需要的人，比如昏迷的？动大手术需要修养的。&lt;/p&gt;
&lt;p&gt;医院是一个实体的存在，他必要要占用土地的，我去的市医院一个房间是四&lt;/p&gt;
&lt;p&gt;个床位的，其实如果弄成日本那种胶囊旅馆的形式，则我认为同样一个房间&lt;/p&gt;
&lt;p&gt;的那种空间里，至少可以容纳下20-30个患者，当然考虑到陪护人员，实际不&lt;/p&gt;
&lt;p&gt;可能有那么多，但也能比之前能够大大地容纳更多的人&lt;/p&gt;
&lt;p&gt;现在医疗界有个马太效应，大医院人人都想去，有名的大夫人人都要挂他的号&lt;/p&gt;
&lt;p&gt;其实除了以动刀出名的大夫和医院，我发现其他像是诊断或者处理意见出名的&lt;/p&gt;
&lt;p&gt;无不是非得要求病患前去医院现场，拿诊断来说，大夫完全可以远程诊断，将&lt;/p&gt;
&lt;p&gt;处理结果交给有处理能力的中小医院。如此就像流水线一样，大大提高了医生&lt;/p&gt;
&lt;p&gt;的效率，这方面可以参考亚当斯密国富轮里举的制造针的工人的例子，我刚好&lt;/p&gt;
&lt;p&gt;最近看到这个&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h2&gt;最后的话&lt;/h2&gt;
&lt;p&gt;医疗事关我们每个人，希望大家未雨绸缪，平时多给点实际地关注与支持，而&lt;/p&gt;
&lt;p&gt;不是临到头来再来呼天喊地&lt;/p&gt;
&lt;/div&gt;
</content><category term="medical"></category><category term="idea"></category><category term="hospital"></category></entry><entry><title>关于google glass的一些想法</title><link href="https://yunfan.github.io/google-glass-usage.html" rel="alternate"></link><published>2014-07-19T14:30:00+08:00</published><updated>2014-07-19T14:30:00+08:00</updated><author><name>geek42</name></author><id>tag:yunfan.github.io,2014-07-19:/google-glass-usage.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;引子&lt;/h2&gt;
&lt;p&gt;google glass 出来有一阵了，一直没有普及，一个是价格，另外一个是民众的疑虑&lt;/p&gt;
&lt;p&gt;我曾经特别想搞一个这东西，可惜因为价格，难以痛下决心，当时觉得价格高可能是&lt;/p&gt;
&lt;p&gt;没有量产的原因，而要量产，得给他想出各种用途好普及他，因此在我的笔记里存留了&lt;/p&gt;
&lt;p&gt;一个好多年的列表，就是关于google glass的用途，现在也该集缀成文了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;我设想的用途&lt;/h2&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;解决摄影师的道德困境，一边拍一边救人&lt;/h3&gt;
&lt;p&gt;参考这里 &lt;a class="reference external" href="http://www.guokr.com/question/401893/"&gt;http://www.guokr.com/question/401893/&lt;/a&gt; 的一个典型例子，这里的例子是&lt;/p&gt;
&lt;p&gt;摄影师不好救，但即使能救，可能专业的人第一时间也是拍，这是器材限制的，假如&lt;/p&gt;
&lt;p&gt;带着glass则没有这个问题了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;专业人员的辅助工具&lt;/h3&gt;
&lt;p&gt;工具始终是工具，好坏全看用在谁手里，人们抵制别人使用glass在公共场合拍，说是&lt;/p&gt;
&lt;p&gt;侵犯自己的隐私，其实主要是因为使用者的身份，假如是保安警察使用这个呢？则说辞&lt;/p&gt;
&lt;p&gt;很可能就变成他们使用这个识别罪犯和潜在的威胁，用以保护市民了。所以我建议google&lt;/p&gt;
&lt;p&gt;可以免费向各地警察和保安发放点glass …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;引子&lt;/h2&gt;
&lt;p&gt;google glass 出来有一阵了，一直没有普及，一个是价格，另外一个是民众的疑虑&lt;/p&gt;
&lt;p&gt;我曾经特别想搞一个这东西，可惜因为价格，难以痛下决心，当时觉得价格高可能是&lt;/p&gt;
&lt;p&gt;没有量产的原因，而要量产，得给他想出各种用途好普及他，因此在我的笔记里存留了&lt;/p&gt;
&lt;p&gt;一个好多年的列表，就是关于google glass的用途，现在也该集缀成文了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;我设想的用途&lt;/h2&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;解决摄影师的道德困境，一边拍一边救人&lt;/h3&gt;
&lt;p&gt;参考这里 &lt;a class="reference external" href="http://www.guokr.com/question/401893/"&gt;http://www.guokr.com/question/401893/&lt;/a&gt; 的一个典型例子，这里的例子是&lt;/p&gt;
&lt;p&gt;摄影师不好救，但即使能救，可能专业的人第一时间也是拍，这是器材限制的，假如&lt;/p&gt;
&lt;p&gt;带着glass则没有这个问题了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;专业人员的辅助工具&lt;/h3&gt;
&lt;p&gt;工具始终是工具，好坏全看用在谁手里，人们抵制别人使用glass在公共场合拍，说是&lt;/p&gt;
&lt;p&gt;侵犯自己的隐私，其实主要是因为使用者的身份，假如是保安警察使用这个呢？则说辞&lt;/p&gt;
&lt;p&gt;很可能就变成他们使用这个识别罪犯和潜在的威胁，用以保护市民了。所以我建议google&lt;/p&gt;
&lt;p&gt;可以免费向各地警察和保安发放点glass,用来树立glass在人们心目中的正面形象&lt;/p&gt;
&lt;p&gt;其实也不光是警察才能用，比如银行也可以用，尤其是审批贷款的以及做销售的人员&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;现实增强工具&lt;/h3&gt;
&lt;p&gt;这个本身就是glass一开始搞出来的目的之一，我想的是导航街景之类的数据可以插入到&lt;/p&gt;
&lt;p&gt;这里来，这里的问题是需要大量联网，则一来是目前的网络流量额度不够，二来是电池&lt;/p&gt;
&lt;p&gt;续航不行，这个还需要科学家来解决, 如果上面两个解决，则许多现实问题都能被云计算&lt;/p&gt;
&lt;p&gt;给解决了，想想看，你买菜的时候，glass告诉你附近谁有更便宜的同类菜，可以想见，&lt;/p&gt;
&lt;p&gt;google是想拿这个切入现实搜索的入口，同时这个也成了一个数据采集的终端，街景&lt;/p&gt;
&lt;p&gt;的例子也可以反过来用，google可以让数以亿计的glass用户自由上传他们的所见所闻，&lt;/p&gt;
&lt;p&gt;则他的街景数据可以从这些用户上传的视频中提取出来，合成一个完整的街景,这可比&lt;/p&gt;
&lt;p&gt;用车子去采集开销小多了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;第一人称体验工具&lt;/h3&gt;
&lt;p&gt;这个一开始我想的是拍摄第一人称AV，当然现实生活中貌似已经有AV厂准备这么干了，&lt;/p&gt;
&lt;p&gt;但想了下，第一称本身就是个大卖点，并不局限AV,有许多领域需要这个,比如战地记者&lt;/p&gt;
&lt;p&gt;戴个这个，可以非常写实的把战地情况发回后方，关于这个，我建议下一代glass带&lt;/p&gt;
&lt;p&gt;两个镜头，如此可以采集两路数据用于3d体验`, 而方程式赛车手也可以戴上这种眼镜&lt;/p&gt;
&lt;p&gt;直播，让喜欢刺激的观众可以感受赛车手视角的比赛，最妙的是这些数据又是以同样的&lt;/p&gt;
&lt;p&gt;设备在观众眼前展示，效果一定很逼真&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="google-glass"></category><category term="idea"></category><category term="google"></category></entry><entry><title>动态简历</title><link href="https://yunfan.github.io/dynamic-resume.html" rel="alternate"></link><published>2013-05-03T14:30:00+08:00</published><updated>2013-05-03T14:30:00+08:00</updated><author><name>geek42</name></author><id>tag:yunfan.github.io,2013-05-03:/dynamic-resume.html</id><summary type="html">&lt;div class="section" id="id2"&gt;
&lt;h2&gt;引子&lt;/h2&gt;
&lt;blockquote&gt;
大家都喜欢投简历，而且都喜欢投漂亮的简历以使自己脱颖而出，不过另一方面&lt;/blockquote&gt;
&lt;p&gt;几乎人人都讨厌坐下来咬文嚼字地认真写简历。这便形成了矛盾，有的人的思路是&lt;/p&gt;
&lt;p&gt;去网上寻找漂亮的模板来套，而有些人的思路则是给出自己做过的开源项目地址&lt;/p&gt;
&lt;p&gt;当然这种办法只能是给程序员玩。还有些人给出自己的主页或者社交网络地址，希望&lt;/p&gt;
&lt;p&gt;面试官能够看到一个真实的自我。老实说，这些都不怎么完美，漂亮的模板许多人用&lt;/p&gt;
&lt;p&gt;也会让人审美疲劳，开源项目地址有时候会让面试官发现一些很不爽的编码习惯而影响&lt;/p&gt;
&lt;p&gt;决策，何况非程序员没办法利用这个方法。至于说主页或社交网络地址，主题又太散&lt;/p&gt;
&lt;p&gt;太多与简历无关的东西存在里面。我倒是曾经有个关于简历的思路，思考过一阵，今天&lt;/p&gt;
&lt;p&gt;下午一时兴起，于是决定写下此篇博文。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;我的想法&lt;/h2&gt;
&lt;blockquote&gt;
今年来infograph十分盛行，几乎每一次网上流传的惊艳简历都是infograph形式的&lt;/blockquote&gt;
&lt;p&gt;之所以这样，我想原因在于面试官那边，传统的文字/表格简历排版一般都很糟糕，毕竟&lt;/p&gt;
&lt;p&gt;word/pdf上面还没什么好的css模板, :D, 另一方面，面试官有很多简历需要看，他能给&lt;/p&gt;
&lt;p&gt;每份简历的时间是有限的，如果不能快速获取感兴趣的信息，那就只好pass了。流行的&lt;/p&gt;
&lt;p&gt;infograph一般都色彩鲜明，排版漂亮，并且关键的是简洁大方，用简单的图表达出了 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id2"&gt;
&lt;h2&gt;引子&lt;/h2&gt;
&lt;blockquote&gt;
大家都喜欢投简历，而且都喜欢投漂亮的简历以使自己脱颖而出，不过另一方面&lt;/blockquote&gt;
&lt;p&gt;几乎人人都讨厌坐下来咬文嚼字地认真写简历。这便形成了矛盾，有的人的思路是&lt;/p&gt;
&lt;p&gt;去网上寻找漂亮的模板来套，而有些人的思路则是给出自己做过的开源项目地址&lt;/p&gt;
&lt;p&gt;当然这种办法只能是给程序员玩。还有些人给出自己的主页或者社交网络地址，希望&lt;/p&gt;
&lt;p&gt;面试官能够看到一个真实的自我。老实说，这些都不怎么完美，漂亮的模板许多人用&lt;/p&gt;
&lt;p&gt;也会让人审美疲劳，开源项目地址有时候会让面试官发现一些很不爽的编码习惯而影响&lt;/p&gt;
&lt;p&gt;决策，何况非程序员没办法利用这个方法。至于说主页或社交网络地址，主题又太散&lt;/p&gt;
&lt;p&gt;太多与简历无关的东西存在里面。我倒是曾经有个关于简历的思路，思考过一阵，今天&lt;/p&gt;
&lt;p&gt;下午一时兴起，于是决定写下此篇博文。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;我的想法&lt;/h2&gt;
&lt;blockquote&gt;
今年来infograph十分盛行，几乎每一次网上流传的惊艳简历都是infograph形式的&lt;/blockquote&gt;
&lt;p&gt;之所以这样，我想原因在于面试官那边，传统的文字/表格简历排版一般都很糟糕，毕竟&lt;/p&gt;
&lt;p&gt;word/pdf上面还没什么好的css模板, :D, 另一方面，面试官有很多简历需要看，他能给&lt;/p&gt;
&lt;p&gt;每份简历的时间是有限的，如果不能快速获取感兴趣的信息，那就只好pass了。流行的&lt;/p&gt;
&lt;p&gt;infograph一般都色彩鲜明，排版漂亮，并且关键的是简洁大方，用简单的图表达出了&lt;/p&gt;
&lt;p&gt;需要一坨文字才能表达的信息，也便因此收到了预期效果。&lt;/p&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;简历应该传达的信息&lt;/h3&gt;
&lt;blockquote&gt;
你也许会说，既然infograph形式这么好，那我们照做就是了，问题不是这么简单，&lt;/blockquote&gt;
&lt;p&gt;首先，infograph不像文字/表格简历有那么多的模板可套，其次，即使有人提供模板&lt;/p&gt;
&lt;p&gt;，鉴于各人的情况不一样，适合他人的模板未必适合你。所以，我们有必要从问题的&lt;/p&gt;
&lt;p&gt;根源着手，研究到底简历应该传达什么样的信息，如此才能对症下药。&lt;/p&gt;
&lt;blockquote&gt;
那么，简历到底应该传达什么样的信息呢？我们不妨换位思考？企业需要什么样&lt;/blockquote&gt;
&lt;p&gt;的简历呢？企业说到底是为了招人，而不是收集艺术品，大多数企业无非想从简历上&lt;/p&gt;
&lt;p&gt;获得&amp;quot;这个人是个什么样的人，他是否适合我们企业?&amp;quot; 这个问题的答案，那么企业会&lt;/p&gt;
&lt;p&gt;怎么做呢？我们从生活中的经验出发，如果我们想知道某个人是个什么样的人，他是&lt;/p&gt;
&lt;p&gt;否值得交往？我们会如何做呢？我们会过去攀谈或者向他人打听此人过去的一些经历&lt;/p&gt;
&lt;p&gt;，或者直接观察此人看看他的穿着，样貌行为习惯等等, 其实就是此人物理上的属性了。&lt;/p&gt;
&lt;p&gt;那么对于企业招人来说，无非是想了解下此人过去的经历，尤其是从业经历，以及此&lt;/p&gt;
&lt;p&gt;人目前所掌握的一些技能，资源(推销员？)，尤其是那些能被企业职位直接利用的,传&lt;/p&gt;
&lt;p&gt;统的简历一般是直接罗列，也许你有那么一两个面试官感兴趣的点，但我很怀疑他能否&lt;/p&gt;
&lt;p&gt;从那一推文字里找到。infograph相对好点，比如我给自己绘制的一个个人兴趣图，我&lt;/p&gt;
&lt;p&gt;想就比单纯地用文字罗列自己的兴趣比较让人一目了然。&lt;/p&gt;
&lt;img alt="image-about-yunfan-interesting" src="images/yunfan-interesting.jpg" style="width: 800px; height: 600px;" /&gt;
&lt;p&gt;不过目前的这些infograph形式有个问题，如上面我的个人兴趣图示，有时候需要列出的&lt;/p&gt;
&lt;p&gt;信息太多要么你的图不够简洁，一如我的那样，要么，你的图很长或者很宽，导致面试官&lt;/p&gt;
&lt;p&gt;错过什么重要信息 另外一方面，有时候你罗列得太多，反而让人怀疑简历的真实性。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;我的动态简历设想&lt;/h3&gt;
&lt;div class="section" id="id6"&gt;
&lt;h4&gt;呈现方式&lt;/h4&gt;
&lt;blockquote&gt;
关于上面那些问题，我的解决方案是制作动态呈现的简历，将信息按照时间的推移&lt;/blockquote&gt;
&lt;p&gt;逐步的呈现出来简单来说，相当于当前这种静态的infograph的升级。那么，为什么我觉&lt;/p&gt;
&lt;p&gt;得这种方法好呢？&lt;/p&gt;
&lt;blockquote&gt;
首先，上面提到有时候你罗列太多，反而让人怀疑简历的真实性，我们想一想，工&lt;/blockquote&gt;
&lt;p&gt;作上的技能，资源之类的都不是天生的，而是随着时间推移慢慢积累的，从业经历更是&lt;/p&gt;
&lt;p&gt;需要映射到时间轴上的，从传统的文字形式简历来考虑，你的简历上说“我目前掌握 技&lt;/p&gt;
&lt;p&gt;能A, 技能B, 技能C, ... 技能Z” 显然不如 “我在公司A从业期间，同事教会了我技能A&lt;/p&gt;
&lt;p&gt;和B, 后来我去了公司B,从事XX职位又让我掌握了技能C” 这样的说法更好，后者更容易&lt;/p&gt;
&lt;p&gt;让人相信，因为人家看到了你的技能的来源说法，可以凭借自己的经验去判断合理与否&lt;/p&gt;
&lt;p&gt;。其实就算看简历的时候不说什么，面试的时候，也许面试官还是会问你： &amp;quot;你说你会&lt;/p&gt;
&lt;p&gt;技能A, 你能不能告诉我们一些东西证明一下？&amp;quot;&lt;/p&gt;
&lt;blockquote&gt;
当然后者的那种说法虽然不错，由于表现形式是文字，所以还是有我们曾经提到的&lt;/blockquote&gt;
&lt;p&gt;文字的那些问题，而静态的图其实是很难体现出这个意思的，除非你作成漫画形式，而&lt;/p&gt;
&lt;p&gt;把漫画的换页速度加快一点，也就是我说的动态简历啦(假设你了解电影动画的原理，&lt;/p&gt;
&lt;p&gt;12帧，24帧:])&lt;/p&gt;
&lt;blockquote&gt;
其次，这种形式是基于时间轴的，不断的加入你的各种事件，比如:&lt;/blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&amp;quot;你进公司A了，那时候你是个刚刚毕业的愣头青&amp;quot;&lt;/li&gt;
&lt;li&gt;&amp;quot;你分到研发组，但是负责与产品经理们打交道，因此掌握了对非技术人员的沟通技巧&amp;quot;&lt;/li&gt;
&lt;li&gt;&amp;quot;你离开公司A了，因为你十分看好redis,而那帮人非要死守memcache&amp;quot;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;随着时间的延长，这里能列出的事件会越来越多，而你的个人形象也会在面试官那里越&lt;/p&gt;
&lt;p&gt;来越丰富，越真实，&lt;/p&gt;
&lt;p&gt;同时很关键的一点是，这种模式能适合大多数人，所以能够采用统一的模板形式&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h4&gt;衍生的想法&lt;/h4&gt;
&lt;blockquote&gt;
既然可以找到一种模式适合大多数人，那么很显然，作成一个网站服务大众是很不&lt;/blockquote&gt;
&lt;p&gt;错的，同时，很有可能也是有利可图的, 不过话又说回来，如果不能普适的话，我也没&lt;/p&gt;
&lt;p&gt;必要把想法写成博文，我只需要自己做一个这样的动态简历，然后享受赞誉即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;说到做网站，有必要说说如何做&lt;/p&gt;
&lt;p&gt;首先提供一次性编辑，并且生成动画文件的方式是不太好的，很难想象连认真写文&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;字简历都懒得做的人会花更多的时间来回忆揣摩过去发生的种种事件与修饰动画，何况&lt;/p&gt;
&lt;p&gt;过了一年可能用户又需要投简历，而这一年中又发生了点事件，很显然，用户会想要复&lt;/p&gt;
&lt;p&gt;用以前的数据，而不是时隔一年后又重新再走这么一次流程，搞不好用户的记忆会出些&lt;/p&gt;
&lt;p&gt;错，而让那些有机会看到用户的两个版本的简历的面试官怀疑其诚信问题。所以我们应&lt;/p&gt;
&lt;p&gt;该让用户像更新twitter那样添加增量的在网站添加事件，并且随时可以查看整个动画，&lt;/p&gt;
&lt;p&gt;随时可以修改编辑动画的某些部分,像是样式，演示图，tips之类的，这有点像在线记账&lt;/p&gt;
&lt;p&gt;理财的网站，你随时添加记录，随时查看总体结果。&lt;/p&gt;
&lt;blockquote&gt;
其次从长期来看，一个人的简历上事件多多，然而短期来看，即使放到以周来考虑&lt;/blockquote&gt;
&lt;p&gt;的话，适合写入简历的事件也并不多，我想你换工作或者换岗位的频率应该没有这么快，&lt;/p&gt;
&lt;p&gt;然而一个网站如果用户几个月，甚至一年三年才来访问一次，并且更新数据的话，我想&lt;/p&gt;
&lt;p&gt;这就很难说服投资者或者员工相信其前景了，除非你收月费或者要求用户提供各种社交网&lt;/p&gt;
&lt;p&gt;站账户绑定，以方便你自动挖掘信息，整理信息，并把信息面向企业招聘者服务，协助&lt;/p&gt;
&lt;p&gt;他们找到合适的人才，并且在最后的时刻联系找到这位很长时间都不来的用户,通过社交&lt;/p&gt;
&lt;p&gt;账户 :], 这也是一种模式，然而我不太喜欢，自动挖掘的话，社交网站本身也可以做到，&lt;/p&gt;
&lt;p&gt;同时自动生成的信息总有不准确的，又或者千人一面，如果没有用户的主动修饰，很难&lt;/p&gt;
&lt;p&gt;保证企业面试官不会再一次审美疲劳。我喜欢的模式是，你可以让用户绑定自己的社交&lt;/p&gt;
&lt;p&gt;账户，并且做一些社交平台第三方开发，与用户约定一些动作比如在twitter上 ，如果&lt;/p&gt;
&lt;p&gt;用户绑定了账户，并且发了一个信息 带有 #career# 标记之类的，就把该条信息视作一&lt;/p&gt;
&lt;p&gt;个事件收录并且做相关处理,又比如说与类似trello这样的服务网站合作，让用户每完成&lt;/p&gt;
&lt;p&gt;一个卡片可以选择产成一个日常性低优先级的事件，如此则能收集到很多的用户事件，&lt;/p&gt;
&lt;p&gt;而这又可以成为督促用户每周或者每3天回到网站来回顾自己的动态简历并且做出修饰的&lt;/p&gt;
&lt;p&gt;动力，因为他可能把自己的动态简历地址印在名片或者贴在个人主页上。当然，也许你&lt;/p&gt;
&lt;p&gt;会自己做个类似trello的服务，那样不是更方便么？企业在你这里招到人，然后在你这&lt;/p&gt;
&lt;p&gt;里开展日常工作，员工在你这里的企业间流转，多美妙的前景？&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h4&gt;对呈现方式的修正&lt;/h4&gt;
&lt;blockquote&gt;
缺乏足够多的用户事件可能会让网站头疼，然而如上述方式收集到足够多（或许是&lt;/blockquote&gt;
&lt;p&gt;太多了）的事件，也许最终会让企业方面头疼，从而最终让用户以及网站头疼，毕竟，&lt;/p&gt;
&lt;p&gt;企业方面的人员时间有限，而你的10年简历可能生成的动态简历全部播完得要一个多小&lt;/p&gt;
&lt;p&gt;时，那么要么是企业人员看到15分钟还是看到你愣头青那会儿的狗屁企业政治斗争细节&lt;/p&gt;
&lt;p&gt;或者你的碎碎念之类的东西从而厌烦的退出，要么就是他被1个多小时的时长给吓住了，&lt;/p&gt;
&lt;p&gt;从而直接跳过你的动态简历，这两种情况都很糟糕，所以这里要引入对呈现方式的修正。&lt;/p&gt;
&lt;blockquote&gt;
为了更准确表达意思以及更丰富地表现用户，网站方面需要收集更多的事件与细节，&lt;/blockquote&gt;
&lt;p&gt;这些都会催生更长的动态简历播放时间，而这刚好与企业预期给每个简历的审阅时间相&lt;/p&gt;
&lt;p&gt;反，企业是希望审阅时间越少并且掌握的信息越多越好&lt;/p&gt;
&lt;blockquote&gt;
有没有例外呢？有的，当企业对该人感兴趣并且想要了解更多细节的时候，很显然，&lt;/blockquote&gt;
&lt;p&gt;这时候他不介意多花10分钟了解下你在某公司的详细从业经历，如果结果令他更感兴趣，&lt;/p&gt;
&lt;p&gt;则显然他愿意再花又一个10到20分钟来详细审阅你在某个岗位工作的任务细节和你当时&lt;/p&gt;
&lt;p&gt;对一些工作任务的感想之类的，从而决定你是否就是他们想要的人。&lt;/p&gt;
&lt;blockquote&gt;
所以我们的动态简历必须是能够被压缩，隐藏细节的，并且在浏览者感兴趣的时候，&lt;/blockquote&gt;
&lt;p&gt;可以随时就某个地方进行细节展开。&lt;/p&gt;
&lt;blockquote&gt;
举个例子，你的15年从业经历可以压缩成 &amp;quot;在公司A上班&amp;quot; &amp;quot;在公司B上班&amp;quot; &amp;quot;在公司C&lt;/blockquote&gt;
&lt;p&gt;上班&amp;quot; ... &amp;quot;在目前的公司Z上班&amp;quot; 以及 &amp;quot;掌握技能A&amp;quot; &amp;quot;掌握技能B&amp;quot; &amp;quot;掌握技能C&amp;quot; 等登。&lt;/p&gt;
&lt;p&gt;有时候企业人员对你当前的公司从业经历没啥兴趣，他想看看你在公司B上班的经历，那&lt;/p&gt;
&lt;p&gt;么他可以选择你的 &amp;quot;在公司B上班&amp;quot; 事件对应的时间轴范围，同时选择细节展开，然后你&lt;/p&gt;
&lt;p&gt;在公司B上班时候那些 岗位变动事件，工作任务完成事件这些会被调阅，并且以时间轴的&lt;/p&gt;
&lt;p&gt;形式播放，这时候，这位企业人员发现你曾经开发过某个模块，而这个经验可能非常适合&lt;/p&gt;
&lt;p&gt;他们企业目前招聘的职位，于是他再进一步展开你在完成这个模块任务事件相关的更具体&lt;/p&gt;
&lt;p&gt;的细节事件展开，看看你开发第一天怎么说，第三天怎么说，最后完成模块你有啥总结的&lt;/p&gt;
&lt;p&gt;感想，甚至当他发现你最后总结说这项任务太简单了，会想要看看当时你的同事们是怎么&lt;/p&gt;
&lt;p&gt;说的，是否你是个天才或者大话精，又或者根本就是分给你的任务部分就是简单的（个人&lt;/p&gt;
&lt;p&gt;觉得，这个feature已经在对企业人员的收费线内了）,如果恰好同事们证明你就是个天才&lt;/p&gt;
&lt;p&gt;bingo,这位企业人员于是决定联系你啦&lt;/p&gt;
&lt;blockquote&gt;
所以对任何人来说，他的动态简历在第一眼看上去都只是很短的一个快速浏览，如果&lt;/blockquote&gt;
&lt;p&gt;没有感兴趣的话，那么3至5分钟放完然后pass, 如果有感兴趣的方面，则可以付出更多的&lt;/p&gt;
&lt;p&gt;时间来展开相关细节查看播放，这是一个皆大欢喜的呈现方式。当然网站可能就得要求用&lt;/p&gt;
&lt;p&gt;户在回来修饰的时候给各种事件添加从属关系， 在A公司B职位的工作事件显然都属于在A&lt;/p&gt;
&lt;p&gt;公司工作的事件，网站还可能要求用户给各类事件提供一些打分，从而在压缩动态的时候&lt;/p&gt;
&lt;p&gt;可以考虑省略掉某些不那么重要的事件，而这些都能增强用户与网站的互动。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h4&gt;这个想法适合谁?&lt;/h4&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;twitter, 他们目前好像在为盈利模式发愁&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;google plus,从他们的创新性圈子设计与ui来看，他们很喜欢搞点不一样的花样，并且&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;显然他们想玩出自己的社交网站style&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;linkedin, 他们目前不缺员工与企业，缺的只是一种好的方式让员工与企业更快匹配&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first last"&gt;(他们上次给了google一个我的推荐，结果那边却不知道我英文烂，害我白激动一场)这
也是他们的正事&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;skillpages, 他们的界面比linkedin简洁多了，他们可能想更简洁更创新一点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;trello, 他们可能就会从自己的用户着手，推出这项增强服务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;HackerNews上的诸位，他们既渴望创业又有能力去实现这些&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你也许会以为我最适合，因为这一切都是我想起来的，是的，随着实现的深入，我还能&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;想更多，问题在于，虽然我也会css修饰但我完全没有设计能力(这一点请参考我的博客页面&lt;/p&gt;
&lt;p&gt;设计,css是我自己写的)，也许idea不错，结果硬是就让我拙劣的美工与平面设计能力给搞砸&lt;/p&gt;
&lt;p&gt;了。&lt;/p&gt;
&lt;blockquote&gt;
我写出来，是希望他实现，至于是不是我实现的，无关紧要，谁实现的谁得利，如果你&lt;/blockquote&gt;
&lt;p&gt;觉得心里过意不去，那么可以考虑给我前50的内测用户资格 :], 当然经常与我通通气就更好啦。&lt;/p&gt;
&lt;blockquote&gt;
最后欢迎来信交流，我的邮箱是 jyf1987 at gmail dot com, 费了几个小时写这么篇文&lt;/blockquote&gt;
&lt;p&gt;章，本来计划的自己的forth实现又泡汤了。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="idea"></category><category term="resume"></category><category term="infograph"></category><category term="web"></category><category term="service"></category></entry><entry><title>2012总结与2013展望</title><link href="https://yunfan.github.io/2013-new-year.html" rel="alternate"></link><published>2012-12-31T12:00:00+08:00</published><updated>2012-12-31T12:00:00+08:00</updated><author><name>geek42</name></author><id>tag:yunfan.github.io,2012-12-31:/2013-new-year.html</id><summary type="html">&lt;div class="contents topic" id="id2"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id19"&gt;序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id20"&gt;2012年的总结&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id21"&gt;工作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id22"&gt;人文素养&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id9" id="id23"&gt;科学素养&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id10" id="id24"&gt;技术&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id11" id="id25"&gt;生活&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id12" id="id26"&gt;认识论&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id13" id="id27"&gt;社会交往&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id14" id="id28"&gt;2013年展望&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id15" id="id29"&gt;自我拓展&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id16" id="id30"&gt;生活相关&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id17" id="id31"&gt;万年话题之泡妞&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id18" id="id32"&gt;尾声&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id19"&gt;序&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;似乎年末总结总会感慨时间过得快，去年如是，前年如是，今年亦不外如是，去年写的&lt;/p&gt;
&lt;p&gt;总结( &lt;a class="reference external" href="http://blog.renren.com/blog/80288196/795338871"&gt;http://blog.renren.com/blog/80288196/795338871&lt;/a&gt; ) 似乎还未淡忘，今年的&lt;/p&gt;
&lt;p&gt;年末却又到来，没奈何，只得写一写。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id20"&gt;2012年的总结&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id21"&gt;工作&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
前期在 &lt;a class="reference external" href="http://www.guokr.com/"&gt;果壳&lt;/a&gt; 完成了动态的改造，我感觉那个做完以后&lt;/blockquote&gt;
&lt;p&gt;动态部分我也可算是有不少经验之人了，果壳是一家很有意思的公司，做的事情有意思，&lt;/p&gt;
&lt;p&gt;工作过程也有意思，同事更有意思，问题自然也是存在的，否则我不会跑路，坦率地说&lt;/p&gt;
&lt;p&gt;如果果壳能够支持远程办公，让我在家coding …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="contents topic" id="id2"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id19"&gt;序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id20"&gt;2012年的总结&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id21"&gt;工作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id22"&gt;人文素养&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id9" id="id23"&gt;科学素养&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id10" id="id24"&gt;技术&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id11" id="id25"&gt;生活&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id12" id="id26"&gt;认识论&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id13" id="id27"&gt;社会交往&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id14" id="id28"&gt;2013年展望&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id15" id="id29"&gt;自我拓展&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id16" id="id30"&gt;生活相关&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id17" id="id31"&gt;万年话题之泡妞&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id18" id="id32"&gt;尾声&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id19"&gt;序&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;似乎年末总结总会感慨时间过得快，去年如是，前年如是，今年亦不外如是，去年写的&lt;/p&gt;
&lt;p&gt;总结( &lt;a class="reference external" href="http://blog.renren.com/blog/80288196/795338871"&gt;http://blog.renren.com/blog/80288196/795338871&lt;/a&gt; ) 似乎还未淡忘，今年的&lt;/p&gt;
&lt;p&gt;年末却又到来，没奈何，只得写一写。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id20"&gt;2012年的总结&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id21"&gt;工作&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
前期在 &lt;a class="reference external" href="http://www.guokr.com/"&gt;果壳&lt;/a&gt; 完成了动态的改造，我感觉那个做完以后&lt;/blockquote&gt;
&lt;p&gt;动态部分我也可算是有不少经验之人了，果壳是一家很有意思的公司，做的事情有意思，&lt;/p&gt;
&lt;p&gt;工作过程也有意思，同事更有意思，问题自然也是存在的，否则我不会跑路，坦率地说&lt;/p&gt;
&lt;p&gt;如果果壳能够支持远程办公，让我在家coding，我完全愿意继续做下去。&lt;/p&gt;
&lt;blockquote&gt;
从果壳一离职，没休息两天就立刻感到新公司 &lt;a class="reference external" href="http://www.guohead.com/"&gt;果合&lt;/a&gt; 就&lt;/blockquote&gt;
&lt;p&gt;职了，（没办法， &lt;strong&gt;糊口阿，大哥&lt;/strong&gt; ）名字纯属巧合，业务是不一样的，现在担任的是数&lt;/p&gt;
&lt;p&gt;据挖掘以及各种救火队职能，这家的氛围很不错，尤其是老板与员工的互动以及轻松的日&lt;/p&gt;
&lt;p&gt;常工作，当然事物都是有其两面性的。总体来说，这是一家能让人满意的公司(废话，要&lt;/p&gt;
&lt;p&gt;不然干嘛来)，要是能支持远程办公就更妙了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id22"&gt;人文素养&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
今年于音乐事业是彻底绝缘了，就算把最近发现的一个音乐生成库算进去的话，也只&lt;/blockquote&gt;
&lt;p&gt;能勉强扳回一局吧。&lt;/p&gt;
&lt;blockquote&gt;
历史上倒是看了不少书，包括剑桥中国史系列里的隋唐与辽宋夏金元史，另外分裂时&lt;/blockquote&gt;
&lt;p&gt;时期的南北朝的一些论文看了不少，最近kindle里三国两晋南北朝的目录下的所有论文都&lt;/p&gt;
&lt;p&gt;已看完，又该考虑弄个代理去万方下新的论文了。&lt;/p&gt;
&lt;blockquote&gt;
说到这些历史，插一句关于我家世的问题，查了下，我祖先的金姓鲜有汉族来源，几&lt;/blockquote&gt;
&lt;p&gt;乎全为少数民族，考虑到我爷爷当年之情况，我很怀疑他为清末躲入深山之满族人，这点&lt;/p&gt;
&lt;p&gt;从我及我父亲的一些毛发特征也能看出来，当然，有赖于进一步的血液化验证实，上次果&lt;/p&gt;
&lt;p&gt;壳那个血液研究调查我没参加，实在是可惜。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id23"&gt;科学素养&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
今年貌似开悟，许多以前导致我的数学与物理方面陷入滞塞关键点有所突破，比如说&lt;/blockquote&gt;
&lt;p&gt;数学上的微积分，物理上的那些守恒，电磁学的一些问题，我有在看一些公开课和可汗学&lt;/p&gt;
&lt;p&gt;院的视频，最近这几个月一直玩游戏，又没怎么坚持，惭愧。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id24"&gt;技术&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
由于新公司的技术工作任务变化，我现在更多的使用shell与python混合编程，前不&lt;/blockquote&gt;
&lt;p&gt;久甚至参加web开发，写了几段php代码，虽然有点别扭。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由于个人喜好问题，我算是学会了点clojure，现在对于lisp系终于不是叶公好龙了&lt;/p&gt;
&lt;p&gt;我对csapp的阅读停顿了，具体什么时候开始忘记了，很挫。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id25"&gt;生活&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
6月份搬家，新地方跟原来没隔几步路，空间更大了点，当然价格也高了，没有专属&lt;/blockquote&gt;
&lt;p&gt;卫生间，终究比较麻烦，有一阵很迷恋折叠设计，曾经想把所有家具都替换掉，最后还是&lt;/p&gt;
&lt;p&gt;没干成，懒惰是我最大的敌人。新屋子隔音不怎么好，隔壁情侣太烦人，感觉很有必要带&lt;/p&gt;
&lt;p&gt;耳罩，现在终于知道为毛武侠小说里那些人要闭关了，声音干扰始终是一项大问题&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id26"&gt;认识论&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
似乎过了末日那一天以后，还真是末日了，没盼头了嘛。以前种种紧迫都以末日为理&lt;/blockquote&gt;
&lt;p&gt;由，现在没了，只得恢复之前的状态，当然，根据一项德国科学家的报告，我的推论是这&lt;/p&gt;
&lt;p&gt;样的状态也许才是最好的，所有都是真正的兴趣驱动。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id27"&gt;社会交往&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
新公司认识了几个新同事，如此而已。同往年一样，我现在几乎是结交不到新人了，&lt;/blockquote&gt;
&lt;p&gt;旧人也在不断丧失，波波已经好久没跟我电话了，大概是热衷于传教事业，又或者是我&lt;/p&gt;
&lt;p&gt;对宗教的言论触怒了他吧。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id14"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id28"&gt;2013年展望&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id15"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id29"&gt;自我拓展&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
我要考虑学点音乐合成的知识，由于之前发现的那个好玩的clojure音乐合成库，我&lt;/blockquote&gt;
&lt;p&gt;对音乐合成的兴趣又一次燃起了&lt;/p&gt;
&lt;blockquote&gt;
把目前在看的可汗学院视频看完，同时物理上看到大学物理为止。另外工作相关的数&lt;/blockquote&gt;
&lt;p&gt;学知识可能要看一看&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;然后就是计算机科学与工程上的四个基础方面的提高，csapp,sicp,数据结构，tcp/ip&lt;/p&gt;
&lt;p&gt;最后是一定要找个机会，最少实现一个我的那些idea的网站，用clojure!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id16"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id30"&gt;生活相关&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;找一些适合我的运动，应以室内为主，或者买个WII来？毕竟现在挂了对家人不好&lt;/p&gt;
&lt;p&gt;尽量争取远程办公或者离开帝都去杭州混&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="id17"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id31"&gt;万年话题之泡妞&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
年龄一大，必定就有人热心，立松的老婆就热心给我找，阿姨也曾考虑给我撮合，上&lt;/blockquote&gt;
&lt;p&gt;次回家老妈还跟我说有个姑娘可以考虑，但我始终都没有找，不是我这人性取向独特或者&lt;/p&gt;
&lt;p&gt;根本不想找，我是个正常的男人，我当然想要个女人，但问题是这种事于我是很严肃却又&lt;/p&gt;
&lt;p&gt;不急迫的，许多朋友曾经劝我可以考虑将就下先在帝都找个姑娘，然后骑驴找马，这种事&lt;/p&gt;
&lt;p&gt;别人做我看得惯，自己去做总过不了心理的关，毕竟大家都是有爹妈有人疼的人，关起门&lt;/p&gt;
&lt;p&gt;来在家里都是宝贝一样哄着，这么做，将把别人置于何地呢？ 我的观点是，男人似乎是&lt;/p&gt;
&lt;p&gt;随着年龄增长而越发增值，女人则是慢慢贬值的，倘若耗费别人的青春最后又抛弃了她，&lt;/p&gt;
&lt;p&gt;这种事情实在是与我个人的处世原则冲突。&lt;/p&gt;
&lt;blockquote&gt;
我对待找伴侣的要求倒也不高，只希望能够谈得来，不过这个也许就隐含了许多潜在&lt;/blockquote&gt;
&lt;p&gt;的要求，又因为我不太愿意跟不熟悉的女性交往，可选范围就更少了，所以最后导致今天&lt;/p&gt;
&lt;p&gt;这么个结局。&lt;/p&gt;
&lt;blockquote&gt;
只能说，继续考虑吧&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id18"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id32"&gt;尾声&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
既然末日都过了，也没啥可担心的了，大家都吃好喝好生活好吧，顺祝新年快乐&lt;/blockquote&gt;
&lt;/div&gt;
</content><category term="years"></category></entry><entry><title>现代技术条件下的中餐增强</title><link href="https://yunfan.github.io/enhancement-for-chinese-restaurants.html" rel="alternate"></link><published>2012-07-29T12:00:00+08:00</published><updated>2012-07-29T12:00:00+08:00</updated><author><name>geek42</name></author><id>tag:yunfan.github.io,2012-07-29:/enhancement-for-chinese-restaurants.html</id><summary type="html">&lt;div class="section" id="id2"&gt;
&lt;h2&gt;由头&lt;/h2&gt;
&lt;blockquote&gt;
最近有一阵晚饭总是在回家路上的小豆面馆吃，几次&lt;/blockquote&gt;
&lt;p&gt;遭遇让我有了些想法。再者，上次搬家时候立松跟我谈起&lt;/p&gt;
&lt;p&gt;杭州小笼包的事，备加感慨。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;观察与对比&lt;/h2&gt;
&lt;blockquote&gt;
kfc等西式快餐在国内很流行，我觉得应该跟滋味关系不大，&lt;/blockquote&gt;
&lt;p&gt;主要是猎奇与换换口味之类的心理，另外也有不少人真的是&lt;/p&gt;
&lt;p&gt;冲着他的快去的，因为那些流程保证了你是立等可取的。另外&lt;/p&gt;
&lt;p&gt;一个是标准化的问题，你在一家店铺里尝的跟另外n家的都一样，&lt;/p&gt;
&lt;p&gt;喜欢的话总能每次吃到这滋味。份量上则标准单位很低，适合&lt;/p&gt;
&lt;p&gt;调整，一个人喜欢吃汉堡，可能可以多吃两个，像我喜欢吃炒蛋&lt;/p&gt;
&lt;p&gt;什么的，多吃两盘似乎不太合适。也撑不下。&lt;/p&gt;
&lt;blockquote&gt;
反观中餐则不行，首先是流程不保证你快，即使是小豆面馆&lt;/blockquote&gt;
&lt;p&gt;吉野家，虽然也是让你立等，却不是立取的，这是中餐性质决定的&lt;/p&gt;
&lt;p&gt;，这还是比较快餐化的，如果是传统的，那就更不可能让你在那立&lt;/p&gt;
&lt;p&gt;等，话说吃个酸菜鱼锅会让你自己端回去座位去吃么？&lt;/p&gt;
&lt;blockquote&gt;
另一个问题是中餐的口味并不标准化，比如蛋炒饭，我从来没&lt;/blockquote&gt;
&lt;p&gt;吃到过统一的，即使同一家店铺，换个师傅都不一样，比较典型的&lt;/p&gt;
&lt;p&gt;都是那几样流行菜，像川菜里的鱼香系列（肉丝 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id2"&gt;
&lt;h2&gt;由头&lt;/h2&gt;
&lt;blockquote&gt;
最近有一阵晚饭总是在回家路上的小豆面馆吃，几次&lt;/blockquote&gt;
&lt;p&gt;遭遇让我有了些想法。再者，上次搬家时候立松跟我谈起&lt;/p&gt;
&lt;p&gt;杭州小笼包的事，备加感慨。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;观察与对比&lt;/h2&gt;
&lt;blockquote&gt;
kfc等西式快餐在国内很流行，我觉得应该跟滋味关系不大，&lt;/blockquote&gt;
&lt;p&gt;主要是猎奇与换换口味之类的心理，另外也有不少人真的是&lt;/p&gt;
&lt;p&gt;冲着他的快去的，因为那些流程保证了你是立等可取的。另外&lt;/p&gt;
&lt;p&gt;一个是标准化的问题，你在一家店铺里尝的跟另外n家的都一样，&lt;/p&gt;
&lt;p&gt;喜欢的话总能每次吃到这滋味。份量上则标准单位很低，适合&lt;/p&gt;
&lt;p&gt;调整，一个人喜欢吃汉堡，可能可以多吃两个，像我喜欢吃炒蛋&lt;/p&gt;
&lt;p&gt;什么的，多吃两盘似乎不太合适。也撑不下。&lt;/p&gt;
&lt;blockquote&gt;
反观中餐则不行，首先是流程不保证你快，即使是小豆面馆&lt;/blockquote&gt;
&lt;p&gt;吉野家，虽然也是让你立等，却不是立取的，这是中餐性质决定的&lt;/p&gt;
&lt;p&gt;，这还是比较快餐化的，如果是传统的，那就更不可能让你在那立&lt;/p&gt;
&lt;p&gt;等，话说吃个酸菜鱼锅会让你自己端回去座位去吃么？&lt;/p&gt;
&lt;blockquote&gt;
另一个问题是中餐的口味并不标准化，比如蛋炒饭，我从来没&lt;/blockquote&gt;
&lt;p&gt;吃到过统一的，即使同一家店铺，换个师傅都不一样，比较典型的&lt;/p&gt;
&lt;p&gt;都是那几样流行菜，像川菜里的鱼香系列（肉丝，茄子），杭帮菜&lt;/p&gt;
&lt;p&gt;的西湖牛肉羹更是离谱，自离杭州，没吃过味道接近的。这个有点&lt;/p&gt;
&lt;p&gt;让消费者无所适从。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;我的观点&lt;/h2&gt;
&lt;blockquote&gt;
中餐这个问题既是劣势也是优势，说他劣势主要是基于历史的&lt;/blockquote&gt;
&lt;p&gt;数据来看的，没有做得很大型的连锁，这里的大型，我指的是kfc&lt;/p&gt;
&lt;p&gt;麦当劳这种大型，不是小豆这种，kfc在我家乡黄山市都有，小豆我&lt;/p&gt;
&lt;p&gt;在杭州都没见到过。&lt;/p&gt;
&lt;blockquote&gt;
但上面说过的一些问题其实也是优势，因为信息时代，信息处理&lt;/blockquote&gt;
&lt;p&gt;越来越廉价了，而现代消费市场更是一个精准的市场，所谓精准，也&lt;/p&gt;
&lt;p&gt;就是要针对个人作定制，在这一点上，中餐可谓是非常适合，举个简单&lt;/p&gt;
&lt;p&gt;的例子，你去中餐店吃多了，与那店员熟悉了，也许某些你爱吃的菜&lt;/p&gt;
&lt;p&gt;份量可以稍微多点，某些你偏爱的口味可以重一点，然而你即使去千百&lt;/p&gt;
&lt;p&gt;次KFC，店员也不会了解你喜欢吃汉堡而多给你一个汉堡，这正是他的&lt;/p&gt;
&lt;p&gt;标准单位小带来的不利影响，同时由于标准化问题，店员也不大可能给&lt;/p&gt;
&lt;p&gt;你做个大一点的汉堡&lt;/p&gt;
&lt;blockquote&gt;
中餐虽然有这个优势，但历史上因为主要靠人来判断，所以很难形&lt;/blockquote&gt;
&lt;p&gt;成一种稳定的方法：首先某个店员的好的方法并不能快速的传递给所有&lt;/p&gt;
&lt;p&gt;员工; 其次是人事变动会有很大影响，某个核心员工一跑路，他的那些&lt;/p&gt;
&lt;p&gt;熟客立刻就会感觉不适(前提是以前享受了该员工提供的定制化服务)。&lt;/p&gt;
&lt;blockquote&gt;
然而，信息时代的来临带来了一种新的解决方案&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;我的方案&lt;/h2&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;措施&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;简单点说就是： 计算机视觉+云计算(computer visior + cloud service)&lt;/p&gt;
&lt;p&gt;详细版本的解释是&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;使用云计算，将顾客的偏好数据存在公共库里供共享使用，&lt;/p&gt;
&lt;p&gt;比如我偏好咸，则这个偏好无论在川菜馆还是杭帮菜馆里&lt;/p&gt;
&lt;p&gt;都是成立的，即使是在KFC，他们如果能把汉堡做得咸一点&lt;/p&gt;
&lt;p&gt;对我而言，也是令人愉悦的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;使用计算机视觉，一般来说是，人物识别，在各个终端上&lt;/p&gt;
&lt;p&gt;识别出顾客，并将其与云中的数据联系在一起。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;应用场景&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;兼容的方案通常会比较好，所以顾客仍和以往一样先就坐后点餐，餐馆&lt;/p&gt;
&lt;p&gt;中应布满摄像头，使其能够覆盖整个就餐区，这个说起来玄乎，其实无非&lt;/p&gt;
&lt;p&gt;几个摄像头而已，然后顾客进入以后触发跟踪系统跟踪，这时候，只要&lt;/p&gt;
&lt;p&gt;顾客一招手，系统就会自动判断是否要点餐，于是召唤相应的空闲服务员&lt;/p&gt;
&lt;p&gt;过来，这种技术虽然理论比较玄乎，但其实早已经在用了，典型的例子是&lt;/p&gt;
&lt;p&gt;kinect。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;点餐应该考虑使用可交互移动终端，当然这个无所谓是给服务员还是顾客，&lt;/p&gt;
&lt;p&gt;只是这个点餐的选项应该有可选的口味与份量以及其他偏好，比如我每次去&lt;/p&gt;
&lt;p&gt;吃蛋炒饭都要多加两个蛋，如果每次都是服务员问我还是像以前那样多加&lt;/p&gt;
&lt;p&gt;两个蛋吗？这会让我很开心。这个场景在传统的餐厅只有经常去的熟客才&lt;/p&gt;
&lt;p&gt;会遇见，但信息时代借助云计算，一个陌生的餐厅的服务员也可以做到这点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;接上面的，要将个人的偏好数据提取出来，很重要的一点是需要人脸识别，&lt;/p&gt;
&lt;p&gt;这会识别出当前消费者具体是谁，这样才有助于下一步判断。关于这一点，&lt;/p&gt;
&lt;p&gt;我不清楚是否很容易，因为识别出人脸的区域很容易，识别出是谁就未必，&lt;/p&gt;
&lt;p&gt;还有一些具体的问题如双胞胎如何处理，都是需要专家考虑解决的&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;扩展&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;有了消费者的数据以后，下一步就是各种挖掘与推荐了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;首先是点菜的推荐。这个无须赘述&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;其次是健康信息的跟踪与共享&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;腹泻去了医院，医生也许要查看下你最近吃了什么&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;感冒生病打针吃药也许有一些忌口，这个需要反应到餐馆去&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;节食计划也许要考虑你的口味偏好推荐一些既能让你满意，又不会让你&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;发胖的菜品&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;减肥运动计划也许会因为你刚才吃了一碗红烧肉而加大今天的运动指标&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;使用云计算的方案对一些松散的中餐的品牌建设会很有利，比如立松给我&lt;/p&gt;
&lt;p&gt;说的杭州小笼包，压根不是杭州的，也不是一家连锁的，但是大家都做这个&lt;/p&gt;
&lt;p&gt;共享些数据还是对所有人都有利的，同时也对品牌有利，通过对整个共享&lt;/p&gt;
&lt;p&gt;数据的挖掘，可以了解消费者究竟对品牌的哪些菜品感兴趣。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;对于西餐，对，你没看错，我说的就是西餐，云计算与计算机识别以及顾客数据&lt;/p&gt;
&lt;p&gt;可以加强集团对于连锁店的约束，例如对于店员的行为监控，对于顾客反馈的&lt;/p&gt;
&lt;p&gt;获知，以及配料的调剂（这个我可以解释，地区差异可能让KFC的某种汉堡在此地&lt;/p&gt;
&lt;p&gt;比彼处消费比例更高，但这个其实是取决于顾客的，如果只是看整体的统计数据&lt;/p&gt;
&lt;p&gt;是很难找到真实数据来源，从而做出准确预测的）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;讲了这些，无非是希望餐馆的体验更好而已，想起我以前跟同事说的用平板给餐馆&lt;/p&gt;
&lt;p&gt;作点菜的想法还被嘲笑，后来国外真有人这么搞了，却被赞誉，现实总是让人无语&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="idea"></category><category term="computer-vision"></category><category term="cloud"></category><category term="chinese-food"></category></entry><entry><title>一种基于虚拟机的ADT服务器</title><link href="https://yunfan.github.io/a-vm-for-adt-server.html" rel="alternate"></link><published>2012-05-28T12:00:00+08:00</published><updated>2012-05-28T12:00:00+08:00</updated><author><name>geek42</name></author><id>tag:yunfan.github.io,2012-05-28:/a-vm-for-adt-server.html</id><summary type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id19"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;摘要&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id20"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;概念&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id21"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;ADT服务器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#redis" id="id22"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;redis分析&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id23"&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;redis是什么&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id24"&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;redis有什么特性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id7" id="id25"&gt;3.3&amp;nbsp;&amp;nbsp;&amp;nbsp;redis有什么问题&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id26"&gt;3.3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;数据类型仍然不够丰富&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id9" id="id27"&gt;3.3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;策略不够灵活&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id10" id="id28"&gt;3.3.3&amp;nbsp;&amp;nbsp;&amp;nbsp;命令设计没有策略&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id11" id="id29"&gt;3.4&amp;nbsp;&amp;nbsp;&amp;nbsp;redis官方的补救&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id12" id="id30"&gt;3.5&amp;nbsp;&amp;nbsp;&amp;nbsp;我的总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id13" id="id31"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;我的方案&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id14" id="id32"&gt;4.1&amp;nbsp;&amp;nbsp;&amp;nbsp;虚拟机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id15" id="id33"&gt;4.2&amp;nbsp;&amp;nbsp;&amp;nbsp;ADT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id16" id="id34"&gt;4.3&amp;nbsp;&amp;nbsp;&amp;nbsp;具体的工程方案&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id17" id="id35"&gt;4.3 …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id19"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;摘要&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id20"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;概念&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id21"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;ADT服务器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#redis" id="id22"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;redis分析&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id23"&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;redis是什么&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id24"&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;redis有什么特性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id7" id="id25"&gt;3.3&amp;nbsp;&amp;nbsp;&amp;nbsp;redis有什么问题&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id26"&gt;3.3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;数据类型仍然不够丰富&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id9" id="id27"&gt;3.3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;策略不够灵活&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id10" id="id28"&gt;3.3.3&amp;nbsp;&amp;nbsp;&amp;nbsp;命令设计没有策略&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id11" id="id29"&gt;3.4&amp;nbsp;&amp;nbsp;&amp;nbsp;redis官方的补救&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id12" id="id30"&gt;3.5&amp;nbsp;&amp;nbsp;&amp;nbsp;我的总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id13" id="id31"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;我的方案&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id14" id="id32"&gt;4.1&amp;nbsp;&amp;nbsp;&amp;nbsp;虚拟机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id15" id="id33"&gt;4.2&amp;nbsp;&amp;nbsp;&amp;nbsp;ADT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id16" id="id34"&gt;4.3&amp;nbsp;&amp;nbsp;&amp;nbsp;具体的工程方案&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id17" id="id35"&gt;4.3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;虚拟机的建议&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id18" id="id36"&gt;4.4&amp;nbsp;&amp;nbsp;&amp;nbsp;我的方案的一些问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id19"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;摘要&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;这篇文章介绍了一种基于虚拟机的ADT服务器的设计，该文章尤其针对redis&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id20"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;概念&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id21"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;ADT服务器&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;该文章主要讨论的是key-value类型的内存数据库&lt;/p&gt;
&lt;p&gt;在内存数据库的设计中，有两种思路：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;将任意数据序列化后存储在内存中，数据库不了解保存的内容类型&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;将特定类型的数据用既定的接口存储在内存中，数据库了解保存的&lt;/dt&gt;
&lt;dd&gt;内容的类型，并能对其做精细化的控制&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;第一种方式的典型代表是memcached, 而第二种方式的典型代表则是redis&lt;/p&gt;
&lt;p&gt;这里我们主要讨论第二种方式。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="redis"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id22"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;redis分析&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id23"&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;redis是什么&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;以下摘录来自redis官方的描述文档:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Redis is an open source, advanced key-value store.
It is often referred to as a data structure server
since keys can contain strings, hashes, lists,
sets and sorted sets.
&lt;/pre&gt;
&lt;p&gt;注意，它也认可自身是一个数据结构服务器的说法&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id24"&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;redis有什么特性&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;服务器提供多种数据类型，string, list, set, hash, sorted set，&lt;/p&gt;
&lt;p&gt;并且根据每种类型提供相应的操作方法，例如对于sorted set类型，&lt;/p&gt;
&lt;p&gt;就有获取某些区间内值的操作方法，这个对于典型的web列表分页是&lt;/p&gt;
&lt;p&gt;非常有帮助的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;服务器的数据类型是抽象的，比如hash类型，自从2.2以后，对于小数据量&lt;/p&gt;
&lt;p&gt;的hash类型，使用的是一种优化过的叫做zipmap的存储，而大于一定数量&lt;/p&gt;
&lt;p&gt;以后，则切换到另外一种存储，（由此引发了切换攻击，:]）。这一点&lt;/p&gt;
&lt;p&gt;是很便利的，用户得到了使用上的便利与存储上的便宜。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id25"&gt;3.3&amp;nbsp;&amp;nbsp;&amp;nbsp;redis有什么问题&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id8"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id26"&gt;3.3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;数据类型仍然不够丰富&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
redis相对memecache开启了内存存储与操纵结构数据的先河，大量的用户开始&lt;/blockquote&gt;
&lt;p&gt;把数据存储迁移到redis上，而把后面的sql只当作一种备份策略，但是问题在于&lt;/p&gt;
&lt;p&gt;传统sql能够提供的一些策略并非全部都能映射到redis当前所能提供的一些方案&lt;/p&gt;
&lt;p&gt;上的，例如 sorted set数据类型 只能根据一个score来排序，而传统sql方案可能&lt;/p&gt;
&lt;p&gt;会支持两个到三个field的排序，&lt;em&gt;ORDER BY field1 DESC, field2 ASC&lt;/em&gt; 这样的效果&lt;/p&gt;
&lt;p&gt;目前官方是不支持的。又比如要限制某些类型的取值之类的问题，存储人的年龄的&lt;/p&gt;
&lt;p&gt;至少不应该有负数吧&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id27"&gt;3.3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;策略不够灵活&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
前面说到，redis的数据类型是抽象的，举的例子是hash类型，提到小于一定数量的&lt;/blockquote&gt;
&lt;p&gt;hash类型其存储类型是使用zipmap，而超过以后则切换到另外一个存储类型，虽然&lt;/p&gt;
&lt;p&gt;这个边界值是可以调整的，默认是512，你可以根据需要来调整，但是过了512以后又&lt;/p&gt;
&lt;p&gt;到了65536呢？也许你可能要考虑使用SSD硬盘来替代部分内存的工作，毕竟内存虽然&lt;/p&gt;
&lt;p&gt;便宜又大，但如果真超过了机器限制转而走集群的话，那速度未必有走SSD快呢。当然&lt;/p&gt;
&lt;p&gt;这个问题官方不是不能解决，而是解决无力，因为官方不能保证用户服务器上有SSD，&lt;/p&gt;
&lt;blockquote&gt;
或者是虽然你把数据都存在redis里了，但是有许多数据只是衍生的数据，比如sorted&lt;/blockquote&gt;
&lt;p&gt;set这个类型大多数情况下就是冗余的，相当于sql里的一个索引，一般来说他的member存&lt;/p&gt;
&lt;p&gt;key引用，而score则存对应的排序依据字段。这种情况可能不同的数据类型重要性不一样&lt;/p&gt;
&lt;p&gt;我们可能希望string和hash类型的数据都能够在硬盘上有一个备份，而list set sorted&lt;/p&gt;
&lt;p&gt;set这些类型 可能由于存储的是key引用，所以不那么重要，丢了还可以重建，无所谓,&lt;/p&gt;
&lt;p&gt;但很可惜官方目前无法提供如此灵活的策略&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id28"&gt;3.3.3&amp;nbsp;&amp;nbsp;&amp;nbsp;命令设计没有策略&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
redis的协议是人类友好的，命令式的，基本上来说是 数据类型+操作 对应一个命令，&lt;/blockquote&gt;
&lt;p&gt;但问题在于有许多操作从抽象角度来说是一样的，既然redis在数据类型上可以提供&lt;/p&gt;
&lt;p&gt;抽象的数据类型，为何在操作上不能也做到这一点呢？&lt;/p&gt;
&lt;blockquote&gt;
我举个最简单的例子就是 INCRBY 和 HINCRBY 这两个命令，这两个其实抽象的操作&lt;/blockquote&gt;
&lt;p&gt;效果是一致，都无非是将该命令相关参数确定的某个值给加上一些数值而已。但是由于&lt;/p&gt;
&lt;p&gt;INCRBY是找到一个string类型的key 并增加他的值，而HINCRBY 是找到一个hash 中的&lt;/p&gt;
&lt;p&gt;一个key ，并增加他的值，参数个数都不一样，可能大家会有疑问，这个怎么抽象？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其实换个角度来想问题，你就会发现参数个数是可以一样的。&lt;/p&gt;
&lt;p&gt;我们参考下web前端的开发，以前要修改一个element,使用传统的w3c那套DOM操作，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你需要一层套一层的get_element_by_name, children 之类的调用来定位到最终需要操&lt;/p&gt;
&lt;p&gt;作的元素上，然后调用相关的操作函数，这个一层又一层的调用层数是不固定的，有可&lt;/p&gt;
&lt;p&gt;能1层就到，也可能5层，6层，所以这个问题与INCRBY和HINCRBY的参数个数不一样是类&lt;/p&gt;
&lt;p&gt;似，最终的解决办法是，把定位当作一个过程，提供一些参数来一次定位，比如jQuery&lt;/p&gt;
&lt;p&gt;的选择器，只要你提供一些魔法参数，立刻就能定位到相关的元素上，然后调用相关的&lt;/p&gt;
&lt;p&gt;操作了，redis其实也可以这么做，无非是先定位，使用一套标记方法来限制数据类型，&lt;/p&gt;
&lt;p&gt;分割符什么的 ，我现在就可以设计个简单的标记法解决INCRBY与HINCRBY的问题:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
1, 设计一个命令叫 PLUS, 他只有固定两个参数，一个是定位器，一个是值

2, 定位标记可以规定，#开头的为hash类型, $开头的为字符类型，.(点)作为分隔符

    因此必须相应的禁止redis的key中使用特殊符号如# $ . 之类，这不是问题

3，根据1和2的规定 原来的 INCRBY str_key 1 命令可以改为 PLUS $str_key 1

   而 HINCRBY hkey field 1 则可以改为 PLUS #hkey.field 1

4，该方法还可以进一步套到 sorted set上去。
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id29"&gt;3.4&amp;nbsp;&amp;nbsp;&amp;nbsp;redis官方的补救&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
官方也意识到了一些问题，可能没我想得那么多，所以2.6以后带了lua script，原来只&lt;/blockquote&gt;
&lt;p&gt;是个分支，但是antire已经弄到主版本了，但问题在于lua虽然跟python ruby比是个小巧&lt;/p&gt;
&lt;p&gt;的语言，但是在redis这种应用场景里，就算是个大语言了，lua核心也谈不上最小，&lt;/p&gt;
&lt;p&gt;iolanguage就号称vm比lua的小多了。关键还不在于此，lua为着通用目的考虑，给语言加&lt;/p&gt;
&lt;p&gt;了一些特性，这些是定制化无法删除的，你总不能把那套meta table的机制删掉吧？该类&lt;/p&gt;
&lt;p&gt;脚本一出手，可能自身的语言机制消耗的性能要比完成的逻辑消耗的性能大多了，lua本&lt;/p&gt;
&lt;p&gt;来就是面向table的，如果真的性能比redis的hash高，那就完全可以自己做个redis&lt;/p&gt;
&lt;p&gt;server的角色了，我以前写的饭否爬虫就是用lua的table在内存里缓存了200k的用户信息&lt;/p&gt;
&lt;p&gt;用起来就跟redis的hash一样的。&lt;/p&gt;
&lt;blockquote&gt;
当然官方还无意识的提供了另外的有一些补救，比如由于是c写的，代码组织上又比较友&lt;/blockquote&gt;
&lt;p&gt;好，所以实际上你当然可以根据自己的特殊需求来定制一些数据类型，例如前面提到的&lt;/p&gt;
&lt;p&gt;支持多个排序依据的sorted set，但是阿，这解决不了所有问题哥哥，如果你想在hash里&lt;/p&gt;
&lt;p&gt;的一个field里再存一个hash，并且要跟系统的实现一致，你怎么办呢？ 如果你是自己实&lt;/p&gt;
&lt;p&gt;现了一个 naked hash 选定调用了官方的一个实现，那么如果有另外一个人也实现了一套&lt;/p&gt;
&lt;p&gt;hash，你是否又要改代码以便在某些条件下去调用他的实现函数呢？ 所以说这是个泥淖&lt;/p&gt;
&lt;p&gt;任谁走进来，过一阵都会陷下去无法自拔了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id30"&gt;3.5&amp;nbsp;&amp;nbsp;&amp;nbsp;我的总结&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
redis 相比 memcache是开启了一种使用内存的新方式，这个开创性的举动当然是值&lt;/blockquote&gt;
&lt;p&gt;得赞扬的，但是一旦现在大家都加入进来，大规模使用以后，是可以发现其中存在的许多&lt;/p&gt;
&lt;p&gt;问题的，例如 redis比memcache多的就是数据类型，但自己数据类型不够怎么办? 还有&lt;/p&gt;
&lt;p&gt;策略不灵活，以前只是把memcache当缓存用，这个问题无足轻重，现在有的已经当作主要&lt;/p&gt;
&lt;p&gt;数据库用了，那么这个问题就很重要了，再有就是命令设计的不够规范，或者再具体点，&lt;/p&gt;
&lt;p&gt;不够正交，基本上是需要一个功能就多个命令，而不是从全盘考虑是否需要增加新命令&lt;/p&gt;
&lt;p&gt;还是修改已有命令的实现。这个有点类似处理器分类中的 CISC 类型。像那个INCRBY与&lt;/p&gt;
&lt;p&gt;HINCRBY两个命令的存在就好像x86里有这种寻址那种寻址N多种寻址一样。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id31"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;我的方案&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;针对redis的那些问题，我给了一个另外的解决问题的方案。 这个方案在文章标题里就有&lt;/p&gt;
&lt;p&gt;体现，既基于虚拟机实现的 ADT服务器，这个解决方案有两个重点：虚拟机与ADT&lt;/p&gt;
&lt;div class="section" id="id14"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id32"&gt;4.1&amp;nbsp;&amp;nbsp;&amp;nbsp;虚拟机&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
就像前面提到的那样，redis目前就像是CISC cpu, 有一个功能就加一个指令，这个&lt;/blockquote&gt;
&lt;p&gt;颇有点头疼医头，脚疼医脚，既然谈到CISC，那么不得不提到RISC，RISC对于CISC的改进&lt;/p&gt;
&lt;p&gt;可以看得到的就是简化指令，这个大家可以参考下intel的x86指令集砖头书与mips的&lt;/p&gt;
&lt;p&gt;mips32指令集的示意图，两者的差别应该是很明显的，如我先前所提到的那样，INCRBY&lt;/p&gt;
&lt;p&gt;与HINCRBY 完全可以设计成一个指令，只是得配合另外一个定位功能，所以就像RISC虽然&lt;/p&gt;
&lt;p&gt;精简了指令集数目，但往往实现同样一个功能会增加几个指令一样，我之前自己设计的&lt;/p&gt;
&lt;p&gt;PLUS指令可能就会相对INCRBY和HINCRBY要多出一些判断数据类型以及多重定位的处理步&lt;/p&gt;
&lt;p&gt;骤，这一点就我个人来说，是可以接受的。&lt;/p&gt;
&lt;blockquote&gt;
另外的问题是策略不够灵活，我之前说过你完全可以自己定制类型实现，但如果是&lt;/blockquote&gt;
&lt;p&gt;嵌套的类型就比较难办，你得能够调用其他人写的实现，如果你不了解内在的实现，就c&lt;/p&gt;
&lt;p&gt;语言来说就无法动态的调用相应的实现，也许函数指针是可以的，但你得定个调用规范，&lt;/p&gt;
&lt;p&gt;类似FFI那样麻烦，这种情况下，不如使用分离式的设计，既将redis server分离为虚拟&lt;/p&gt;
&lt;p&gt;机与存储器实现两个部分，虚拟机指令集应该由官方控制，但是预留客户定制的指令空间&lt;/p&gt;
&lt;p&gt;至于存储器实现那就可以官方只实现经典的那些，而客户可以自行根据自己的策略实现某&lt;/p&gt;
&lt;p&gt;种符合官方定义的数据类型，例如带SSD备份的hash类型，而list仍然只用在内存里的方&lt;/p&gt;
&lt;p&gt;式，掉电不管。&lt;/p&gt;
&lt;blockquote&gt;
这里的好处在于，通过分离式的设计，达到了策略上的完全灵活，一个命令，你既可&lt;/blockquote&gt;
&lt;p&gt;以带检查，也可以直接映射某个存储类型提供的操作，这一切取决于你的程序，相比较&lt;/p&gt;
&lt;p&gt;redis2.6提供的lua方案，这个虚拟机的开销要远比起个lua其语言的开销小多了。另外&lt;/p&gt;
&lt;p&gt;这个方案的好处还在于提供升级与降级的简易方案，写过虚拟机的朋友都晓得，移植cpu&lt;/p&gt;
&lt;p&gt;远比移植一个完整应用容易，因为cpu就那几个指令，像我的tweezervm那更是精简得吓人&lt;/p&gt;
&lt;p&gt;因为是堆栈式的，只有30来个指令，c/py的版本都能轻松实现，当然，其实你也可以用&lt;/p&gt;
&lt;p&gt;fpga烧录一个专用的cpu,这个相比你的汇编实现的redis还给力哦。何况，必要时候你可&lt;/p&gt;
&lt;p&gt;以轻松切换到jvm上去 ：] 考虑到最近facebook正在往jvm上迁，企业用户应该更喜欢这&lt;/p&gt;
&lt;p&gt;个方案吧。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id15"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id33"&gt;4.2&amp;nbsp;&amp;nbsp;&amp;nbsp;ADT&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
ADT就是抽象数据类型的意思，学过c的应该有所了解，我虽然半路出家，恰好也在&lt;/blockquote&gt;
&lt;p&gt;云风那学到了这口黑话。ADT的好处在于你可以依据策略来调整实现，但行为的效果却是&lt;/p&gt;
&lt;p&gt;对外一致的。这种方式，当然是很适合虚拟机这种设计的，因为你如果用c的宏 那只是在&lt;/p&gt;
&lt;p&gt;编译时候就确定的了，在你运行时就糟糕了。另外核心的逻辑代码能够大大的精简，我看&lt;/p&gt;
&lt;p&gt;c代码有大量的宏判断，为相关的调用做数据准备之类的冗余，核心逻辑往往就隐藏在这&lt;/p&gt;
&lt;p&gt;一堆里，十分影响后来的人理解系统&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id16"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id34"&gt;4.3&amp;nbsp;&amp;nbsp;&amp;nbsp;具体的工程方案&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
我是个开发工程师而不是CS理论科学家，所以我能够给出一些工程上的实践方案，由&lt;/blockquote&gt;
&lt;p&gt;于ADT的部分实在是很简单，而且具体的工程方法与策略有关，我当然无法给出什么具体&lt;/p&gt;
&lt;p&gt;的建议，因此我着重针对虚拟机的设计给出一些建议&lt;/p&gt;
&lt;div class="section" id="id17"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id35"&gt;4.3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;虚拟机的建议&lt;/a&gt;&lt;/h4&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;要设计cpu首先的一个问题是，设计成寄存器机还是堆栈机？关于这个的争论真是一坨&lt;/p&gt;
&lt;p&gt;又一坨，我个人比较喜欢堆栈机的概念，但是从性能上来讲，如果是软实现，寄存器&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;机多半由于其可以映射到真实cpu上而变得性能很高，反观堆栈机，从forth的实践&lt;/p&gt;
&lt;p&gt;来说，一般操作深度大概是20左右，这个在mips机器上可以映射到32个通用寄存器中&lt;/p&gt;
&lt;p&gt;的20个，但是在x86上就悲剧了，当然如果你使用特殊硬件的例如chunk moore的&lt;/p&gt;
&lt;p&gt;green array，那情况又颠倒过来了。只是现实中毕竟是寄存器机比较多。至于寄存&lt;/p&gt;
&lt;p&gt;器机中存在的流水线，超标量，乱序等工程方法那倒是不必要的，我们应该向GPU看&lt;/p&gt;
&lt;p&gt;齐，他的内部是有好多的流处理器，每个只处理一个任务而已。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;本来我是希望更灵活一点，把数据类型也变成一种附加的指令数据，但是由于不同的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;抽象数据类型有着完全不同的操作，而且由于存储实现那已经够灵活了，所以倒是可&lt;/p&gt;
&lt;p&gt;以把一些抽象数据类型独有的操作给独立出来，比如只有sorted set类型才有取排序&lt;/p&gt;
&lt;p&gt;后范围的指令，也就是 zrange家族指令，这个用在其他抽象数据类型上是无用的。&lt;/p&gt;
&lt;p&gt;至于说 给一个字符串类型设置字符串值与给一个哈希类型的一个field设置字符串值&lt;/p&gt;
&lt;p&gt;这种的是可以合并成一个指令的，既给某一个存储引用设置字符串值，当然前提是之&lt;/p&gt;
&lt;p&gt;前有个指令定位到了那个存储引用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;此外需要一些专有加速，比如查找hash key, 不光是在全局找，也可以在一个hash类&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;型下找，甚至可以在一个hash类型下的嵌套hash里找，这需要设计者的通盘考虑，并&lt;/p&gt;
&lt;p&gt;设计出一套规范hash实现的机制。又比如一些 整数/浮点数检测之类的常用辅助函数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;虚拟机的指令编译可以考虑做在服务器端，我指的是应用服务器，不是虚拟机本身，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;而客户端仍然像以往一样根据既定的协议发送指令过来，并且，客户端可以像soc&lt;/p&gt;
&lt;p&gt;开发一样，在线运行时给某个指令烧录其他的实现。考虑到一个指令往往逻辑并不&lt;/p&gt;
&lt;p&gt;复杂，这完全是可行的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id18"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id36"&gt;4.4&amp;nbsp;&amp;nbsp;&amp;nbsp;我的方案的一些问题&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;代码品质问题，有可能某些恶劣的实现拖累了整体的运行速度，或者是某些实现&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;会泄漏内存，额。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;多种实现的冲突问题，比如两个插件都强调写硬盘，由于互相争抢，反而有可能&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;导致双方的效率都低下从而无法达到预期的效果&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;开发者的预期可能和具体的实现不一致，不过我觉得出现这种问题，多半是那种&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;开发与运维有隔阂的大公司，小团队应该问题不大。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="idea"></category><category term="vm"></category><category term="adt"></category><category term="redis"></category></entry><entry><title>关于豆瓣网的富媒体化的想法</title><link href="https://yunfan.github.io/douban-and-rich-media.html" rel="alternate"></link><published>2011-12-17T12:00:00+08:00</published><updated>2011-12-17T12:00:00+08:00</updated><author><name>geek42</name></author><id>tag:yunfan.github.io,2011-12-17:/douban-and-rich-media.html</id><summary type="html">&lt;div class="contents topic" id="id2"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id23"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;引子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id24"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id25"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;我的想法&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id7" id="id26"&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;豆瓣应该做的事&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id27"&gt;3.1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;电影页&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id9" id="id28"&gt;3.1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;图书页&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id10" id="id29"&gt;3.1.3&amp;nbsp;&amp;nbsp;&amp;nbsp;活动页&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id11" id="id30"&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;如何获取效益&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id12" id="id31"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;存在的问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id14" id="id32"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;最后的话&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id15" id="id33"&gt;6&amp;nbsp;&amp;nbsp;&amp;nbsp;文中引用链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id23"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;引子&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
很长时间以来，我都保持着一个习惯，就是先去 &lt;a class="reference external" href="http://movie.douban.com/"&gt;豆瓣电影&lt;/a&gt; 寻找我喜欢的某部电影，&lt;/blockquote&gt;
&lt;p&gt;查看其相关的推荐电影清单，又或者去某个豆列寻找一些类似电影的清单，得到这些相关&lt;/p&gt;
&lt;p&gt;电影的名字以及一些评论以后，确定要看哪一部，然后去某些著名视频网站 &lt;a class="footnote-reference" href="#id21" id="id4"&gt;[1]&lt;/a&gt; 寻找相关&lt;/p&gt;
&lt;p&gt;播放页。 但我感觉这样的步骤实在是多余，而且随着打击盗版的力度加大，视频站的搜索 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="contents topic" id="id2"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id23"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;引子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id24"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id25"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;我的想法&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id7" id="id26"&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;豆瓣应该做的事&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id27"&gt;3.1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;电影页&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id9" id="id28"&gt;3.1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;图书页&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id10" id="id29"&gt;3.1.3&amp;nbsp;&amp;nbsp;&amp;nbsp;活动页&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id11" id="id30"&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;如何获取效益&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id12" id="id31"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;存在的问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id14" id="id32"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;最后的话&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id15" id="id33"&gt;6&amp;nbsp;&amp;nbsp;&amp;nbsp;文中引用链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id23"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;引子&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
很长时间以来，我都保持着一个习惯，就是先去 &lt;a class="reference external" href="http://movie.douban.com/"&gt;豆瓣电影&lt;/a&gt; 寻找我喜欢的某部电影，&lt;/blockquote&gt;
&lt;p&gt;查看其相关的推荐电影清单，又或者去某个豆列寻找一些类似电影的清单，得到这些相关&lt;/p&gt;
&lt;p&gt;电影的名字以及一些评论以后，确定要看哪一部，然后去某些著名视频网站 &lt;a class="footnote-reference" href="#id21" id="id4"&gt;[1]&lt;/a&gt; 寻找相关&lt;/p&gt;
&lt;p&gt;播放页。 但我感觉这样的步骤实在是多余，而且随着打击盗版的力度加大，视频站的搜索&lt;/p&gt;
&lt;p&gt;是越来越弱， 以至于根本无法搜到你想看的，而其实那个视频确实在的。但是我想，那位&lt;/p&gt;
&lt;p&gt;在豆瓣上发评论的人应该是一定有个地址可以播放的 ：]&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id24"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;问题&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;a class="reference external" href="http://www.douban.com/"&gt;豆瓣网&lt;/a&gt; 是一个社区，虽然我不是其重度用户，(我是 &lt;a class="reference external" href="http://www.google.com/reader/"&gt;GR&lt;/a&gt; 重度用户), 但是有些&lt;/blockquote&gt;
&lt;p&gt;需求严重依赖他，比如前面所提的找电影看的需求, 还有找书看等等，在这些核心的应用&lt;/p&gt;
&lt;p&gt;方面，豆瓣的体验都做得还不错，饶是如此，我仍对前述的流程不满意，因为有太多的电影&lt;/p&gt;
&lt;p&gt;我找不到，简言之是命中率太高，失望也就大了。你想想，看到那评论，动心了，结果找&lt;/p&gt;
&lt;p&gt;不到任何可播放地址，要走非法路径下载的话，目前这个网速也是不给力，等到终于把电影&lt;/p&gt;
&lt;p&gt;拖到本地以后，激情恐怕早就不在了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id25"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;我的想法&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id26"&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;豆瓣应该做的事&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id8"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id27"&gt;3.1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;电影页&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;有几种思路可供借鉴&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;在电影介绍页提供添加嵌入式视频播放的功能，这个直接开放给用户，借助用户的力量&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;去补充相关的播放页，从而把用户都黏在网站内。&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;由官方根据页面上的 &lt;strong&gt;想看&lt;/strong&gt; 的统计数据， 人工对热门的电影添加播放页，这个似乎&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以中国的国情来看，比较符合实际的控制需求，能够满足审查部门的无理要求。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id28"&gt;3.1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;图书页&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;图书方面豆瓣本身就有商店购买推荐的，不过我们应该考虑一些问题&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;许多书买不到纸张版本了。&lt;/li&gt;
&lt;li&gt;有许多书是需要勘误表的。&lt;/li&gt;
&lt;li&gt;还有些书，是需要周边的配套的，比如需要配套的磁带，或者配套的习题集， 典型的同时包含&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这两种配套物品的就是 英语教材, LOL&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;要解决此类问题就需要&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;提供文档嵌入，比如国内最大的版权内容集散地: &lt;a class="reference external" href="http://iask.sina.com.cn/"&gt;新浪爱问&lt;/a&gt; 以及老二的 &lt;a class="reference external" href="http://wenku.baidu.com/"&gt;百度文库&lt;/a&gt; 现在&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;就利用flash支持文档嵌入，他们的本意是提供预览，但我觉得豆瓣这里使用可以就是提供全文电子&lt;/p&gt;
&lt;p&gt;化阅读。&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;还可以提供冲印服务，许多书都是小众的，出版社不敢多印，但考虑到豆瓣有这个想读这种功能，&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用户习惯培养很好，可以增加一个团购印刷本，就我所知 china-pub 现在提供此类服务，也有一些&lt;/p&gt;
&lt;p&gt;专门的网站提供书籍印刷服务，如果能与豆瓣结合一下，相信对大家都有好处。&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;勘误表的问题，其实靠文档嵌入就可以解决了，因为只要增加在文档相关位置插入勘误的功能就&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可以了，这个对于读者快速获得勘误位置很有帮助。&lt;/p&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;周边产品需要的也是富媒体的插入，这里的富媒体不单指视频与音乐，还可以考虑教材类书籍的&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;习题集等，我曾经给大学一个教师做过一个调查问卷，也无非是单选,多选等选择题，此类题型都可以&lt;/p&gt;
&lt;p&gt;用flash/js实现，作为教材的配套测试提供在豆瓣的书籍信息页面上，对于各种教材类书籍的反馈是&lt;/p&gt;
&lt;p&gt;很有帮助的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id29"&gt;3.1.3&amp;nbsp;&amp;nbsp;&amp;nbsp;活动页&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;豆瓣有许多同城活动，但是要举办线下活动显然就限制了参与的人人数了, 这是很容易理解的，原因无非是&lt;/p&gt;
&lt;p&gt;同城就限制了外地的朋友参加的可能性，线下活动则一来有场地限制，二来人太多了，容易引起相关部门注意&lt;/p&gt;
&lt;p&gt;但有些活动必然是会引起大量人群关注的，比如某个科幻讲座，某个技术论坛，以及某个线下选美腿什么的，&lt;/p&gt;
&lt;p&gt;虽则有照片，但我其实希望豆瓣能提供两类视频嵌入&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;活动的直播视频(这个或许可以找 pps/pplive/tencent 之类的有经验服务提供商)&lt;/li&gt;
&lt;li&gt;活动过后剪辑过的&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id30"&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;如何获取效益&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
无利不起早，利当然是要重点考虑的， 以我个人对豆瓣的一些小组的参与来看，大家似乎是有能力以及意愿&lt;/blockquote&gt;
&lt;p&gt;享受付费的优质服务的，所以这就很简单了&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;提供付费的服务，比如前述的冲印图书&lt;/li&gt;
&lt;li&gt;与第三方服务提供商分成，这个似乎是豆瓣的传统模式，只是实施起来需要考虑统一付费方式，总不能用户在&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;每家都注册个付费会员帐号吧。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id31"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;存在的问题&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;有关部门， 有些书籍，影音在国内是 &lt;strong&gt;不应该&lt;/strong&gt; 出现在公众视野的，以往豆瓣只提供一些文字介绍，最多是&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;图片，如果全面富媒体化以后，要小心在这里中招，因为目前看来，最不理性的就是有关部门，一个不小心封站是&lt;/p&gt;
&lt;p&gt;有可能的。慎之慎之！&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;某些公司，只要在地球上做服务，就要谨防来自中国的 c2c &lt;a class="footnote-reference" href="#id22" id="id13"&gt;[2]&lt;/a&gt; 攻势，所以这点也是需要考虑的，不要为他人&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;做嫁衣忙活一场。&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;计费策略与形象公关问题。收费这东西腾讯做得最好，不过也因此形象很不好，腾讯的庞大而默默的用户群稀释&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;了对他的一些负面指责声音，但我想豆瓣的那些个用户可都不是好惹的，呵呵。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id14"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id32"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;最后的话&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;文章只是拿豆瓣来做典型，重点在于表达新时代的网站应该着重内容的混搭以及提供一站式服务的问题，可以将豆瓣&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;替换成任意相关类型的网站，比如 &lt;a class="reference external" href="http://www.guokr.com/"&gt;果壳网&lt;/a&gt;&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;对于优酷等视频网站，光靠目前这个电影院模式还是太乏味了，所以我考虑要发篇文章讨论这个，暂且加入todo&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id15"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id33"&gt;6&amp;nbsp;&amp;nbsp;&amp;nbsp;文中引用链接&lt;/a&gt;&lt;/h2&gt;
&lt;table class="docutils footnote" frame="void" id="id21" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id4"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;比如 优酷网(&lt;a class="reference external" href="http://www.youku.com/"&gt;http://www.youku.com/&lt;/a&gt;) , 土豆网(&lt;a class="reference external" href="http://www.tudou.com/"&gt;http://www.tudou.com/&lt;/a&gt;) etc&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id22" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id13"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;copy to china&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</content><category term="idea"></category><category term="douban"></category><category term="rich-media"></category></entry><entry><title>android 市场的一些想法</title><link href="https://yunfan.github.io/the-android-app-market.html" rel="alternate"></link><published>2011-12-12T12:00:00+08:00</published><updated>2011-12-12T12:00:00+08:00</updated><author><name>geek42</name></author><id>tag:yunfan.github.io,2011-12-12:/the-android-app-market.html</id><summary type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id8"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;引子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id9"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id10"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;我的想法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id11"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;存在的问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id8"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;引子&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
前一阵关注了很长时间的 &lt;a class="reference external" href="http://en.ingenic.cn/product.aspx?ID=78"&gt;jz4770&lt;/a&gt; 终于在市场上开卖了， 艾诺出了个平板，使用此处理器,&lt;/blockquote&gt;
&lt;p&gt;我去看了论坛的测试 &lt;a class="footnote-reference" href="#id7" id="id3"&gt;[1]&lt;/a&gt; ，感觉不错，续航又行，又是我想玩的 &lt;a class="reference external" href="http://en.ingenic.cn/product.aspx?ID=78"&gt;jz4770&lt;/a&gt; , 所以就买了一个，&lt;/p&gt;
&lt;p&gt;价格也便宜，买来以后发现确实续航不错，比我的 g7手机好多拉， 只是屏幕分辨率有点低， 所以&lt;/p&gt;
&lt;p&gt;如果要我给别人推荐，我不推荐这款产品，只是对我个人来说， 我只是拿来测试而已，倒也无所谓。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;问题&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
分辨率是一方面的原因，但另外一方面的原因则是直接制约了这款机器的推广，他的兼容性问题,&lt;/blockquote&gt;
&lt;p&gt;大家可能以为android是java平台，应该没什么兼容问题，其实恰好相反，问题很大，android虽然看&lt;/p&gt;
&lt;p&gt;起来在市场上支持了那么多手机，其实日常的也不过是arm和x86, mips是后来才开始加入支持的, x86&lt;/p&gt;
&lt;p&gt;基本不是日常用的，所以市面上清一色的 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id8"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;引子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id9"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id10"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;我的想法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id11"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;存在的问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id8"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;引子&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
前一阵关注了很长时间的 &lt;a class="reference external" href="http://en.ingenic.cn/product.aspx?ID=78"&gt;jz4770&lt;/a&gt; 终于在市场上开卖了， 艾诺出了个平板，使用此处理器,&lt;/blockquote&gt;
&lt;p&gt;我去看了论坛的测试 &lt;a class="footnote-reference" href="#id7" id="id3"&gt;[1]&lt;/a&gt; ，感觉不错，续航又行，又是我想玩的 &lt;a class="reference external" href="http://en.ingenic.cn/product.aspx?ID=78"&gt;jz4770&lt;/a&gt; , 所以就买了一个，&lt;/p&gt;
&lt;p&gt;价格也便宜，买来以后发现确实续航不错，比我的 g7手机好多拉， 只是屏幕分辨率有点低， 所以&lt;/p&gt;
&lt;p&gt;如果要我给别人推荐，我不推荐这款产品，只是对我个人来说， 我只是拿来测试而已，倒也无所谓。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;问题&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
分辨率是一方面的原因，但另外一方面的原因则是直接制约了这款机器的推广，他的兼容性问题,&lt;/blockquote&gt;
&lt;p&gt;大家可能以为android是java平台，应该没什么兼容问题，其实恰好相反，问题很大，android虽然看&lt;/p&gt;
&lt;p&gt;起来在市场上支持了那么多手机，其实日常的也不过是arm和x86, mips是后来才开始加入支持的, x86&lt;/p&gt;
&lt;p&gt;基本不是日常用的，所以市面上清一色的 arm, 也因此，很多人动起了加速的主意，大多数程序都或多&lt;/p&gt;
&lt;p&gt;或少用了arm加速， 在市面上一片 arm的情况下， 没有出现兼容性问题，反而对程序加速有所裨益，&lt;/p&gt;
&lt;p&gt;可是一拿我这个 mips的平板出来后，马脚全露出来了，到现在我也没找到一款可用的终端软件，大家&lt;/p&gt;
&lt;p&gt;都是拿来主义，直接拿java做个壳包装了下现成的c的terminal库。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id10"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;我的想法&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
我的想法是， app market 不单只是做个 app 下载，计费的托管地，还应该成为一个开发团队项目&lt;/blockquote&gt;
&lt;p&gt;管理，自动打包测试的平台，用给开发团队带来更增值的服务提升自身的地位，只是个下载地的话，就太&lt;/p&gt;
&lt;p&gt;低级了，这也是山寨市场满天飞的一个原因。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;具体来说， 应该具备以下的功能&lt;/p&gt;
&lt;p&gt;包括代码托管地, 可以与 &lt;a class="reference external" href="http://code.google.com"&gt;google code&lt;/a&gt; 整合， 也可以另开炉灶, 可以选择开源，也可以选择闭源，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;还应该包括开发管理的一些工具，像 nightly build 之类的, 提供早期开发版本之类的， 还有 bug追踪,&lt;/p&gt;
&lt;p&gt;如 trac 之类提供的功能, 如此才能拖住开发者， 而代码放在市场上的好处在于:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;有利于程序调查，用户对程序表示异议时，可由 google 出面开具无害证明。&lt;/li&gt;
&lt;li&gt;有利于性能调优，google可以在后台对代码进行优化调查，给出一些优化建议，这个对于广大初中级程序员&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;的开发十分有利。使得开发经验不足的程序员也能依靠优秀的点子胜出。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;能够快速发布多平台版本app, 在google推出新的平台以后，能够迅速检查代码，判断能否直接编译打包？或者&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;依赖前面所说的那个特性， 给出需要移植的地方，对于迅速推出新版本很有帮助。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;为客户定制软件， 如果代码能够遵循一定规范， 相同的软件，可以针对不同的用户提供不能的定制版本，&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;比如针对 我的 htc g7 可以去掉代码中的许多 硬件探测部分。对于我的 mips平台， 以及后面会加入的各种&lt;/p&gt;
&lt;p&gt;平台，也能在一夜之间提供相应的平台版本程序，厂商的精力能够放到底层优化而非市场培育上，这对于拉拢盟友&lt;/p&gt;
&lt;p&gt;很有帮助, 事实上甚至可以直接把dalvik-vm 上的字节码转换成客户手机上的机器码，这样速度应该会快好多。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;这是最后一点， 可以方便的切换到其他语言去， android其实提供的是 jvm而已， 在jvm上已经有一些寄生的&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;语言了， 像scala, jpython, jruby什么的， 如果能够籍由gogole提供的代码打包服务， 大家就可以放心的使用&lt;/p&gt;
&lt;p&gt;自己喜欢的语言来做开发了，一旦google碰到这次 oracle 状告的情况， 就能很方便的换个底层解决了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id11"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;存在的问题&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;收费还是不收费的问题&lt;/li&gt;
&lt;li&gt;有些公司不愿意提供代码给google&lt;/li&gt;
&lt;/ol&gt;
&lt;table class="docutils footnote" frame="void" id="id7" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://bbs.imp3.net/thread-10493859-1-1.html"&gt;http://bbs.imp3.net/thread-10493859-1-1.html&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</content><category term="idea"></category><category term="android"></category><category term="app-market"></category></entry><entry><title>关于门徒这部电影</title><link href="https://yunfan.github.io/mentu-movie.html" rel="alternate"></link><published>2011-08-08T12:00:00+08:00</published><updated>2011-08-08T12:00:00+08:00</updated><author><name>geek42</name></author><id>tag:yunfan.github.io,2011-08-08:/mentu-movie.html</id><summary type="html">&lt;div class="contents topic" id="id2"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id6"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;惯例的话&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id7"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;引申的&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id8"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;扯得更远的&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id6"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;惯例的话&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
刚看了部电影，叫《门徒》, 一开始就当是普通的磕瓜子时间电影来看，&lt;/blockquote&gt;
&lt;p&gt;没想到第一句就把人给吸引进去了，吴彦祖那句:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
“吸毒，是因为空虚，那到底是空虚可怕，还是吸毒可怕？”
&lt;/pre&gt;
&lt;p&gt;直接就把我抓住了。于是收紧注意力接着看。&lt;/p&gt;
&lt;p&gt;剧情倒是不复杂，卧底电影，最后成功起出，把他们一网打尽。倒是其中一些&lt;/p&gt;
&lt;p&gt;小细节相互呼应，连缀成串，给人勾勒出了一副现实的场景。&lt;/p&gt;
&lt;blockquote&gt;
片中昆哥一直说着说着不要相信别人，尤其是教育阿力不要相信吸毒者的&lt;/blockquote&gt;
&lt;p&gt;鬼话，然后又大谈市场供需，这个倒是显得出他的心虚，所以要不断的强调吸毒者&lt;/p&gt;
&lt;p&gt;的问题来安慰自己,hmm. 阿力在片后也曾经犹豫了下想要走进吸毒者的路，幸而&lt;/p&gt;
&lt;p&gt;被小女孩把工具给扔了，不过我想根源解决不了，以后会不会重演呢？&lt;/p&gt;
&lt;blockquote&gt;
其实片里最后那一段真的很有意思，最后阿力去问啊芬的老公为何不戒毒，&lt;/blockquote&gt;
&lt;p&gt;此人给出了和啊芬一样的答案，大家肯定觉得他这个该死的吸毒者在撒谎编造&lt;/p&gt;
&lt;p&gt;理由，但我以为这里倒是跟前面昆哥谈的相互辉映了，这两个人都是吸毒者，&lt;/p&gt;
&lt;p&gt;你不能光看演员的外表而决定相信那女的而不是男的 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="contents topic" id="id2"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id6"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;惯例的话&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id7"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;引申的&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id8"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;扯得更远的&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id6"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;惯例的话&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
刚看了部电影，叫《门徒》, 一开始就当是普通的磕瓜子时间电影来看，&lt;/blockquote&gt;
&lt;p&gt;没想到第一句就把人给吸引进去了，吴彦祖那句:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
“吸毒，是因为空虚，那到底是空虚可怕，还是吸毒可怕？”
&lt;/pre&gt;
&lt;p&gt;直接就把我抓住了。于是收紧注意力接着看。&lt;/p&gt;
&lt;p&gt;剧情倒是不复杂，卧底电影，最后成功起出，把他们一网打尽。倒是其中一些&lt;/p&gt;
&lt;p&gt;小细节相互呼应，连缀成串，给人勾勒出了一副现实的场景。&lt;/p&gt;
&lt;blockquote&gt;
片中昆哥一直说着说着不要相信别人，尤其是教育阿力不要相信吸毒者的&lt;/blockquote&gt;
&lt;p&gt;鬼话，然后又大谈市场供需，这个倒是显得出他的心虚，所以要不断的强调吸毒者&lt;/p&gt;
&lt;p&gt;的问题来安慰自己,hmm. 阿力在片后也曾经犹豫了下想要走进吸毒者的路，幸而&lt;/p&gt;
&lt;p&gt;被小女孩把工具给扔了，不过我想根源解决不了，以后会不会重演呢？&lt;/p&gt;
&lt;blockquote&gt;
其实片里最后那一段真的很有意思，最后阿力去问啊芬的老公为何不戒毒，&lt;/blockquote&gt;
&lt;p&gt;此人给出了和啊芬一样的答案，大家肯定觉得他这个该死的吸毒者在撒谎编造&lt;/p&gt;
&lt;p&gt;理由，但我以为这里倒是跟前面昆哥谈的相互辉映了，这两个人都是吸毒者，&lt;/p&gt;
&lt;p&gt;你不能光看演员的外表而决定相信那女的而不是男的，有时候女人说谎可比男人&lt;/p&gt;
&lt;p&gt;精多了，两个人一样的理由，理性的观众一定会由此产生对啊芬当初吸毒原因&lt;/p&gt;
&lt;p&gt;的质疑，进而对啊芬这个人产生质疑，一下子就推翻了先前那种认定的角色设定&lt;/p&gt;
&lt;p&gt;所以说这里做得非常不错。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id7"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;引申的&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
首先要说的是，我能够理解这些人吸毒的原因，破败的家庭，暗淡的前途，&lt;/blockquote&gt;
&lt;p&gt;注定无光的人生，这样的生活能带来什么呢？不用说家里也没有电脑，也没有&lt;/p&gt;
&lt;p&gt;互联网接入，打开电视也多半是那些无聊的节目。我这样爱好互联网，热爱搞&lt;/p&gt;
&lt;p&gt;技术的人玩着互联网偶尔还会觉得无聊，何况是他们呢。&lt;/p&gt;
&lt;blockquote&gt;
一般人感觉不到是因为有这样那样的物欲吊住，为了这样那样的物欲而去&lt;/blockquote&gt;
&lt;p&gt;维持一份工作，而为了这份工作又要投入自己全身心去，这样自然不会无聊了，&lt;/p&gt;
&lt;p&gt;假如偶尔停下来喘口气，思考思考，其实也会觉得无聊的，但是现代工业体系好&lt;/p&gt;
&lt;p&gt;就好在 不用鞭子抽打你，你也会自动拼命干，系统没有给你停下来喘气的机会&lt;/p&gt;
&lt;p&gt;自然思考的机会也就剥夺了，在很小的时候，思考的机会业已由经教育甄别出来&lt;/p&gt;
&lt;p&gt;的少数人给夺了去了，剩下来的都是一个个的水袋了。&lt;/p&gt;
&lt;blockquote&gt;
这里产生一个社会问题就是，自觉生活充实的精英应该如何看待那些淘汰赛&lt;/blockquote&gt;
&lt;p&gt;中的大多数失败者，在民主国家，虽然这些人话语权加大，不过其实那都是假象&lt;/p&gt;
&lt;p&gt;世界越来越由精英去控制了，这是趋势。扯远了，精英与那些身体构成，体液&lt;/p&gt;
&lt;p&gt;成分几乎一样的别样的同类们，究竟该如何相处呢？或者说如何去帮助那些人，&lt;/p&gt;
&lt;p&gt;避免使其自身陷入一种并不乐意的状态。我想有个古老的妙方是宗教信仰，虽则&lt;/p&gt;
&lt;p&gt;科技发达的今天，沙漠诸一神教的体系在崩溃，但换来的无非是新的内容，披着新&lt;/p&gt;
&lt;p&gt;外衣的另类宗教崛起而已，比如我们这些爱好科幻的群体，爱好瑜伽，追求xx文化&lt;/p&gt;
&lt;p&gt;什么的，甚而是飞天面条怪教，种种形式，无非是换了点坚持的内容和形式，本质&lt;/p&gt;
&lt;p&gt;上还在于给每个人找一根无形的鞭子，好帮助你进入工作状态，:D&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id8"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;扯得更远的&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
想到了黑客帝国里，机器人完全靠刺激人来发电这种模式，这里生存的人跟&lt;/blockquote&gt;
&lt;p&gt;吸毒者不就是差不多的么，但人体内本身也会合成多巴胺这种自产自销的毒品，&lt;/p&gt;
&lt;p&gt;平时为了获得那份喜悦，感动种种多巴胺奖励，也会鞭策人去跟吸毒者一样地&lt;/p&gt;
&lt;p&gt;“不择手段”。 感觉人的多巴胺奖励是有限的，一生中所获大概也和那些吸毒者&lt;/p&gt;
&lt;p&gt;短短的一生中所获的差不多，那究竟是这种细水长流好呢还是樱花似的绚烂好呢？&lt;/p&gt;
&lt;p&gt;各人有各人的答案，那些舍己救人的英雄，不知道挂之前有没有吸毒者体验。可惜&lt;/p&gt;
&lt;p&gt;现实永远是现实，这类问题就跟小头大头一样，永远是无法解答的。&lt;/p&gt;
&lt;blockquote&gt;
另外想到了今天看的 bill joy写的 why the future dont need us, 感觉他&lt;/blockquote&gt;
&lt;p&gt;基本是老调重弹，我因为经常看科幻，对这类一点也不觉得陌生，只是我想，后&lt;/p&gt;
&lt;p&gt;机器人时代，假如侥幸机器人对人类就实行那种养小孩的态度，会不会产生整个&lt;/p&gt;
&lt;p&gt;社会的人类都空虚无聊，进而陷入吸毒者境界呢？&lt;/p&gt;
&lt;blockquote&gt;
科技的未来很黑暗&lt;/blockquote&gt;
&lt;/div&gt;
</content><category term="movie-comment"></category></entry><entry><title>about-gtld.rst</title><link href="https://yunfan.github.io/idea-about-gtld.html" rel="alternate"></link><published>2011-06-30T12:00:00+08:00</published><updated>2011-06-30T12:00:00+08:00</updated><author><name>geek42</name></author><id>tag:yunfan.github.io,2011-06-30:/idea-about-gtld.html</id><summary type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id17"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;缘起&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id18"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;谁会受益&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id19"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;装逼企业&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sns" id="id20"&gt;2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;SNS网络&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id21"&gt;2.3&amp;nbsp;&amp;nbsp;&amp;nbsp;多入口的服务&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id9" id="id22"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;总体收益&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id10" id="id23"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;存在的一些问题&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id11" id="id24"&gt;4.1&amp;nbsp;&amp;nbsp;&amp;nbsp;技术问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id12" id="id25"&gt;4.2&amp;nbsp;&amp;nbsp;&amp;nbsp;对行业的影响&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id13" id="id26"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;一点小建议&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id17"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;缘起&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
关于gTLD的话题其实去年就有所耳闻了，当时初一听也觉得不错，也有一些想法,&lt;/blockquote&gt;
&lt;p&gt;但是发现其实还在讨论阶段，并没有实现的意思，所以也就作罢了，前一阵突然&lt;/p&gt;
&lt;p&gt;看到cb新闻 &lt;a class="footnote-reference" href="#id14" id="id3"&gt;[1]&lt;/a&gt; 说正式通过了，价格也敲定了，所以一下子有了兴趣了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id18"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;谁会受益&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id19"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;装逼企业&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
比如爱国者 &lt;a class="footnote-reference" href="#id15" id="id6"&gt;[2]&lt;/a&gt; 和佳能 &lt;a class="footnote-reference" href="#id16" id="id7"&gt;[3]&lt;/a&gt; , 但以我浅薄的战略意识来看 …&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id17"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;缘起&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id18"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;谁会受益&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id19"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;装逼企业&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sns" id="id20"&gt;2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;SNS网络&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id21"&gt;2.3&amp;nbsp;&amp;nbsp;&amp;nbsp;多入口的服务&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id9" id="id22"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;总体收益&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id10" id="id23"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;存在的一些问题&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id11" id="id24"&gt;4.1&amp;nbsp;&amp;nbsp;&amp;nbsp;技术问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id12" id="id25"&gt;4.2&amp;nbsp;&amp;nbsp;&amp;nbsp;对行业的影响&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id13" id="id26"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;一点小建议&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id17"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;缘起&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
关于gTLD的话题其实去年就有所耳闻了，当时初一听也觉得不错，也有一些想法,&lt;/blockquote&gt;
&lt;p&gt;但是发现其实还在讨论阶段，并没有实现的意思，所以也就作罢了，前一阵突然&lt;/p&gt;
&lt;p&gt;看到cb新闻 &lt;a class="footnote-reference" href="#id14" id="id3"&gt;[1]&lt;/a&gt; 说正式通过了，价格也敲定了，所以一下子有了兴趣了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id18"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;谁会受益&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id19"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;装逼企业&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
比如爱国者 &lt;a class="footnote-reference" href="#id15" id="id6"&gt;[2]&lt;/a&gt; 和佳能 &lt;a class="footnote-reference" href="#id16" id="id7"&gt;[3]&lt;/a&gt; , 但以我浅薄的战略意识来看，意义不大，纯属&lt;/blockquote&gt;
&lt;p&gt;装逼&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sns"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id20"&gt;2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;SNS网络&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
这个才是重点， 比如 人人网，腾讯, 新浪微博, 这三家是典型，人人网和腾讯&lt;/blockquote&gt;
&lt;p&gt;都有个问题，赚钱要靠哄用户，特别是腾讯，但是腾讯的那些会员qzone什么的实在&lt;/p&gt;
&lt;p&gt;不咋的，名字长又长，邮箱本来也是，现在好多了。让我们想想看，假如腾讯申请了个&lt;/p&gt;
&lt;p&gt;.qq 的gTLD, 那么首先所有用户都有 qq号码.qq 的qzone空间了， 进一步整合的话，&lt;/p&gt;
&lt;p&gt;就是个人在腾讯这的门户, 下面再分级搞各个服务的菜单，会员有权选择字母域名，&lt;/p&gt;
&lt;p&gt;呵呵 ，典型腾讯运作。&lt;/p&gt;
&lt;blockquote&gt;
人人网和微博也差不多，尤其是人人网。&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id21"&gt;2.3&amp;nbsp;&amp;nbsp;&amp;nbsp;多入口的服务&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
这里说的是比如gmail这样的服务， 我的邮箱是 &lt;a class="reference external" href="mailto:jyf1987&amp;#64;gmail.com"&gt;jyf1987&amp;#64;gmail.com&lt;/a&gt;, 事实上gmail&lt;/blockquote&gt;
&lt;p&gt;是支持把所有 发往 &lt;a class="reference external" href="mailto:jyf1987+xxx&amp;#64;gmail.com"&gt;jyf1987+xxx&amp;#64;gmail.com&lt;/a&gt; 这样的邮件发到我这里的，但是，这个是&lt;/p&gt;
&lt;p&gt;不通用的，经常有email validator会不通过。 所以如果换成 &lt;a class="reference external" href="mailto:xxx&amp;#64;jyf1987.gmail"&gt;xxx&amp;#64;jyf1987.gmail&lt;/a&gt; ，&lt;/p&gt;
&lt;p&gt;这个问题的解决就完美了。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id22"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;总体收益&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
首先这些举例都是大型网络社区，他们是需要集群的，现在许多系统的思路是把相关&lt;/blockquote&gt;
&lt;p&gt;的数据存放在一块，拿人人网来举例， 我可以拥有一个 jyf1987.renren的域名，这个域名&lt;/p&gt;
&lt;p&gt;根据他们的存储策略被解析到具体存我的所有相关数据的那台节点上去，这样他们所有的&lt;/p&gt;
&lt;p&gt;数据存取都在本节点上进行，对于性能优化可能有帮助&lt;/p&gt;
&lt;blockquote&gt;
其次就是有助于突出用户的地位，使用了该类gTLD以后，网站运营方自己的一些系统&lt;/blockquote&gt;
&lt;p&gt;功能模块也用的是和用户平级的域名，这个更符合今后扁平化的发展趋势，打个不恰当的&lt;/p&gt;
&lt;p&gt;比方就是好比google今后将自己的新服务都放到GAE上部署了，和用户平级了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id23"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;存在的一些问题&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id24"&gt;4.1&amp;nbsp;&amp;nbsp;&amp;nbsp;技术问题&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;#. 跨域问题, :] , 这个好理解， jyf1987.renren  和 xxx.renren 这两者的ajax post就有
点麻烦了，不过我感觉新式浏览器能解决，或许采用flash xmlsocket 那种许可模式。&lt;/p&gt;
&lt;p&gt;#. 大段内容的CDN, youtube这种服务就很难享受到好处，而且潜在访客无法预测的，大视频
数据传输量又大，所以这是个问题，解决思路恐怕是换架构&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id25"&gt;4.2&amp;nbsp;&amp;nbsp;&amp;nbsp;对行业的影响&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;#. phishing更容易or更难？ 说他容易是，后缀名增多了，企业防不胜防。说他难是因为，大企业
可以就注册个gTLD, 教育用户以此为识别，这个反而phishing不了了。&lt;/p&gt;
&lt;p&gt;#. 提供整站解决方案的企业会强者愈强，而且抬高了做社区网站的门槛，185k USD的setup fee加
每年70k USD的年费可就不好玩了，何况为了使用流畅，还要考虑各地有dns节点&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id26"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;一点小建议&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
要不大家组团去团购.qq吧， 185k USD也不多，到手后一个域名10块一个月卖给腾讯用户，&lt;/blockquote&gt;
&lt;p&gt;一下子就能赚回头了。&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id14" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://cn.reuters.com/article/CNTechNews/idCNCHINA-4478720110620"&gt;http://cn.reuters.com/article/CNTechNews/idCNCHINA-4478720110620&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id15" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id6"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://tech.ifeng.com/internet/detail_2011_06/22/7187997_0.shtml"&gt;http://tech.ifeng.com/internet/detail_2011_06/22/7187997_0.shtml&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id16" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id7"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://tech.163.com/digi/10/0318/09/6223GE2K001624J2.html"&gt;http://tech.163.com/digi/10/0318/09/6223GE2K001624J2.html&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</content><category term="idea"></category><category term="gtld"></category></entry><entry><title>关于北京交通的改进</title><link href="https://yunfan.github.io/enhancement-of-beijing-traffic.html" rel="alternate"></link><published>2011-05-18T12:00:00+08:00</published><updated>2011-05-18T12:00:00+08:00</updated><author><name>geek42</name></author><id>tag:yunfan.github.io,2011-05-18:/enhancement-of-beijing-traffic.html</id><summary type="html">&lt;div class="contents topic" id="id2"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id13"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;缘起&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id14"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;问题分析&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id15"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;为何交通很拥堵&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id16"&gt;2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;解决的要点在哪里&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id7" id="id17"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;问题解决&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id18"&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;枪毙掉的方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id9" id="id19"&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;本文的方案&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id10" id="id20"&gt;3.2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;节流&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id11" id="id21"&gt;3.2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;开源&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id12" id="id22"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;结束&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id13"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;缘起&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
本文缘起于笔者日日在北京挤地铁，积数年之怨气而作。总所周知，北京交通十分拥堵，&lt;/blockquote&gt;
&lt;p&gt;城区设计不合理导致交通运输一方面需求量很大，但是另一方面现有方案可供提升的空间&lt;/p&gt;
&lt;p&gt;却不多了，故此，笔者有必要绞尽脑汁，来为北京交通提项改进&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id14"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;问题分析&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id15"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;为何交通很拥堵&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
我们知道，北京的交通不可谓不发达了，公交线路多如牛毛，地铁线也是四通八达 …&lt;/blockquote&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="contents topic" id="id2"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id13"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;缘起&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id14"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;问题分析&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id15"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;为何交通很拥堵&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id16"&gt;2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;解决的要点在哪里&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id7" id="id17"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;问题解决&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id18"&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;枪毙掉的方案&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id9" id="id19"&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;本文的方案&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id10" id="id20"&gt;3.2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;节流&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id11" id="id21"&gt;3.2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;开源&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id12" id="id22"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;结束&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id13"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;缘起&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
本文缘起于笔者日日在北京挤地铁，积数年之怨气而作。总所周知，北京交通十分拥堵，&lt;/blockquote&gt;
&lt;p&gt;城区设计不合理导致交通运输一方面需求量很大，但是另一方面现有方案可供提升的空间&lt;/p&gt;
&lt;p&gt;却不多了，故此，笔者有必要绞尽脑汁，来为北京交通提项改进&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id14"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;问题分析&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id15"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;为何交通很拥堵&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
我们知道，北京的交通不可谓不发达了，公交线路多如牛毛，地铁线也是四通八达，何况&lt;/blockquote&gt;
&lt;p&gt;赖政府财政补贴，该地交通费用及其低廉，人们出行也多选择公共交通(这里自然是指普通&lt;/p&gt;
&lt;p&gt;人类)，从这个意义上讲，公共交通设立的目的是达到了，既然如此，为何交通仍然如此拥堵&lt;/p&gt;
&lt;p&gt;呢？这就需要我们仔细观察下了。原来问题出在不合理的城区设计上。&lt;/p&gt;
&lt;blockquote&gt;
北京城城区分片十分鲜明，西北，东南等刚好分别是it,媒体公司扎堆处，由于公司扎堆，自然&lt;/blockquote&gt;
&lt;p&gt;抬高了中心区域的租房价格。迫使大量的 &lt;strong&gt;民工&lt;/strong&gt; 跑到近郊租房，比如天通苑，回龙观，通州等等，&lt;/p&gt;
&lt;p&gt;这批人数量很大，是造成早间高峰拥堵的那一群，当然也是身受其害的那一群。另外我们大家要看到，&lt;/p&gt;
&lt;p&gt;北京中间有个紫禁城，这么大个地方，却不能住人，而且除了地铁能穿过去，其他私车也好，公交也好&lt;/p&gt;
&lt;p&gt;均不能穿行而过，给交通线路规划造成了很大的麻烦。&lt;/p&gt;
&lt;blockquote&gt;
另外有一个问题是，乘坐北京交通的很大一部分人往往是穿越很大一块区域到达上班地点的，&lt;/blockquote&gt;
&lt;p&gt;一路上往往只有上的人，而没有下的人，这也是造成拥堵的一个重要原因。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id16"&gt;2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;解决的要点在哪里&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
其实我们稍作观察可知，交通十分拥堵情况主要发生在早高峰以及晚高峰这两个上班族出行时间，&lt;/blockquote&gt;
&lt;p&gt;要解决此一问题，应该要解决上班族上下班瞬间高峰的问题。这个目的决定了，我们无法靠增加车次来&lt;/p&gt;
&lt;p&gt;解决问题， 因为人人几乎都是要在那个点数上下班的，而且虽则设计交通的人该骂，运营交通，至少&lt;/p&gt;
&lt;p&gt;是地铁的人，却还是很尽责的，据观察，早晚高峰，地铁发车时间间隔都会大大缩短，但目前几乎已&lt;/p&gt;
&lt;p&gt;到极致，每趟列车发车间隔都缩短到了1分钟左右（掐表算过）,因此增加车次已无提升空间。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;回到问题上来，现在我们解决问题的关键在于：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在一定时间段内尽可能多地运输人群，使其到达目的地&lt;/strong&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id17"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;问题解决&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id18"&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;枪毙掉的方案&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;增加地铁车次？ 枪毙原因前面已述。&lt;/p&gt;
&lt;p&gt;增加地铁线路？ 目前已经在实施，但地铁线路投资浩大，目前在建的几条线路只是考虑到了几个&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;新建或扩建的居民区的出行问题，属于填补已有需求，再者，地铁方面绝不会让地铁载运冗余的，原因&lt;/p&gt;
&lt;p&gt;仍是如前所述，耗资过大，因此，随着新地铁线路的落成，部分地区势必成为购房热土，居民纷纷涌入，&lt;/p&gt;
&lt;p&gt;最终地铁仍然拥堵。&lt;/p&gt;
&lt;blockquote&gt;
拆掉故宫开路建房？ 这个如果能够实施，倒是能解决交通问题，只是笔者自己也想不到它的可能性。&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id19"&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;本文的方案&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="id10"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id20"&gt;3.2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;节流&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;既然无法增加车次来扩容，那就靠调整列车内部设置来扩大载运量，笔者认为有两个方面可以考虑：&lt;/p&gt;
&lt;p&gt;首先，如前所述，公交地铁高峰期多为长途运输，一路上多上少下，因此可考虑增设车内扶手以及车顶&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;拉环，原因车顶不设拉环是为了方便下车的人不致为中间的人堵住，但现在既然极少有人下车，那么就可以&lt;/p&gt;
&lt;p&gt;考虑多设拉环，以便于多站人。&lt;/p&gt;
&lt;blockquote&gt;
其次，将公交与地铁的座椅改为可收起。据观察，一个坐着的人大概占据2.5个站着的人的空间，倘若&lt;/blockquote&gt;
&lt;p&gt;高峰期可以将座椅收起，则运载量势必有所提升。而且，我们知道，由于老人有其出行的优势，早高峰期间&lt;/p&gt;
&lt;p&gt;也能看到不少老人乘坐公交出行买菜办事，如果座椅收起，则应能迫使部分老人选择其他时段乘坐，如此&lt;/p&gt;
&lt;p&gt;又能腾出部分空间来给真正急需的人。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#id21"&gt;3.2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;开源&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;只想到一个理想的方案： &lt;strong&gt;飞艇运输&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;飞艇运输有几大好处：造价便宜，可伸缩性强，部署灵活，能够并行运行。飞艇本身就不贵，而且无须&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;像地铁那样修建轨道，我们要知道，造地铁最贵的就是挖那个地铁隧道了。地铁一旦造了轨道，你开与不开&lt;/p&gt;
&lt;p&gt;钱都砸了好多好多了，而飞艇则没有关系，可以随时根据客流调整线路，公交也有这个优势，但是公交需要&lt;/p&gt;
&lt;p&gt;根据在地面修建好的道路上行驶，碰上堵车会很纠结，我想这也是大多数人选择地铁的原因，飞艇既如公交&lt;/p&gt;
&lt;p&gt;一般灵活又如地铁一般迅捷不堵，实在是结合两者优点的一个东西。飞艇还可以随客流增加而增加投入的飞艇&lt;/p&gt;
&lt;p&gt;数量，地铁线路则不能说开就开，就算你想开，也不是马上就可以开成的，公交本是可以说开就开的，可惜&lt;/p&gt;
&lt;p&gt;北京城堵车也是非常厉害的，所以多开也不是很现实。何况飞艇还可以一条线路同时发多个来运输，相比之下&lt;/p&gt;
&lt;p&gt;地铁线也好，公交也好，都无法做到，（公交那个是伪并行），&lt;/p&gt;
&lt;blockquote&gt;
大家可能想到安全问题，其实无须担心，现代汽艇都是具有十分安全的防护的，不像30年代那种居然可以&lt;/blockquote&gt;
&lt;p&gt;点爆的，而飞艇速度能达到0-100km/h ,所以这个也是十分快了，笔者每天大概坐地铁是20km,如乘飞艇高速飞行&lt;/p&gt;
&lt;p&gt;也不过是10几分钟，当然加上从飞艇站至公司的时间，大概20分钟出头就能到吧。&lt;/p&gt;
&lt;blockquote&gt;
另外我有朋友提到空中飞行，遇到大风怎么办？其实这个也不必怕，飞艇能抗7-8级大风，而我在北京两年&lt;/blockquote&gt;
&lt;p&gt;多，至今未遇到8级以上大风。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id22"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;结束&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
非常欢迎各位将自己对本人提出的方案的批评，意见，以及担忧方面提出。&lt;/blockquote&gt;
&lt;/div&gt;
</content><category term="idea"></category><category term="traffic"></category><category term="beijing"></category></entry></feed>