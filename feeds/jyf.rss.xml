<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>geek42 - jyf</title><link>https://yunfan.github.io/</link><description>虽千万人，吾往矣</description><lastBuildDate>Sun, 22 Nov 2020 11:38:00 +0800</lastBuildDate><item><title>最小化的riscv32汇编环境构建</title><link>https://yunfan.github.io/minimal-assembly-enviroment-riscv32.html</link><description>&lt;h1&gt;缘由&lt;/h1&gt;
&lt;p&gt;我一直想构建一个自己的forth,之前用python实现过,但是&lt;/p&gt;
&lt;p&gt;社区一些高级特性都是用汇编语言实现的，因此我的python&lt;/p&gt;
&lt;p&gt;实现总是有些隔靴搔痒，所以我希望有一天能用汇编语言实现&lt;/p&gt;
&lt;p&gt;自己的forth,这方面社区有一个jonesforth 注释很完整，使用&lt;/p&gt;
&lt;p&gt;x86汇编实现，并且是教学目的，本来很适合的，但是x86汇编&lt;/p&gt;
&lt;p&gt;细节实在太多了，所以现在看中了专注简洁的riscv.&lt;/p&gt;
&lt;p&gt;另外一个原因是我发现使用汇编语言表示的算法过程逻辑对于&lt;/p&gt;
&lt;p&gt;理解更容易，而同上述原因一样，x86实在很不适合，之前最简洁&lt;/p&gt;
&lt;p&gt;的应该是mips, 至今我们还能在周围的路由器里大量见到它们，&lt;/p&gt;
&lt;p&gt;但是mips也有一些自己的wirk,比如延迟槽啥的,所以既然今天&lt;/p&gt;
&lt;p&gt;riscv已经开始崛起了，没理由不用它来作为学习平台.&lt;/p&gt;
&lt;p&gt;但是一旦我进入学习之后，发现一些很现实的问题:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;+ 工具链太大，而且都在墙外，拖下来很慢，编译也慢&lt;/span&gt;
&lt;span class="err"&gt;+ 主流发行版(我用的ubuntu)和工具默认都支持rv64 而忽略了rv32&lt;/span&gt;
&lt;span class="err"&gt;+ 但是官方提供的riscv-reader手册却是用rv32i作为教学目标的&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;基于此，我打算构建一个最小化，好编译，并且支持rv32为目标的&lt;/p&gt;
&lt;p&gt;汇编学习环境&lt;/p&gt;
&lt;p&gt;&lt;code&gt;郑重声明&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我使用的是 &lt;em&gt;Linux系统上的vim&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;如果你对这俩不熟悉 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jyf</dc:creator><pubDate>Sun, 22 Nov 2020 11:38:00 +0800</pubDate><guid isPermaLink="false">tag:yunfan.github.io,2020-11-22:/minimal-assembly-enviroment-riscv32.html</guid><category>posts</category><category>riscv32</category><category>assembly</category></item><item><title>关于区块链在政务与公共事业上的应用思考</title><link>https://yunfan.github.io/blockchain-on-public-use.html</link><description>&lt;h1&gt;缘由&lt;/h1&gt;
&lt;p&gt;区块链这个技术我是在接触比特币的时候了解的，虽然并不深入&lt;/p&gt;
&lt;p&gt;但基本概念已经掌握，当时就觉得此技术潜力无穷，而非局限于&lt;/p&gt;
&lt;p&gt;发币上，熟悉我的人应该知道，我一直对区块链应用于非发币事&lt;/p&gt;
&lt;p&gt;业很有兴趣，也有很多想法，奈何彼时加密货币风潮正起，即便&lt;/p&gt;
&lt;p&gt;是非发币事业，最后也要套个货币来刺激参与者。&lt;/p&gt;
&lt;p&gt;想不到突然之间总书记居然对这个技术感兴趣了，我想大概是有&lt;/p&gt;
&lt;p&gt;讲师去普及了下这个新技术给高层，而该技术的一些特点引起了&lt;/p&gt;
&lt;p&gt;他们的兴趣吧。&lt;/p&gt;
&lt;p&gt;既然总书记都发话了，想必后面会有一波风潮应用此技术，虽则&lt;/p&gt;
&lt;p&gt;难免鱼龙混杂，但是也是个机遇，我可以借此将以前的一些想法&lt;/p&gt;
&lt;p&gt;写出来，以供确有兴趣的部门参考。&lt;/p&gt;
&lt;p&gt;此类想法若放在从前必定会为有官部门嗤之以鼻的&lt;/p&gt;
&lt;h1&gt;区块链技术的特点&lt;/h1&gt;
&lt;p&gt;既然介绍要介绍该技术的应用，自然需要简介下该技术的特点，&lt;/p&gt;
&lt;p&gt;虽然涉及到不少技术原理，但是抛开细节来说，该技术的特点就&lt;/p&gt;
&lt;p&gt;是 &lt;em&gt;存档可以防止少数人篡改&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;注意 这里说的是防止少数人篡改，圈子里人都知道51%攻击嘛&lt;/p&gt;
&lt;p&gt;那么这样的特点是很适合政务与公共事业的应用的，一来，防止&lt;/p&gt;
&lt;p&gt;少数人篡改的特点可以杜绝个别职权人士的操作，二来，如果&lt;/p&gt;
&lt;p&gt;确实有管控需要，则利用51%攻击来实现 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jyf</dc:creator><pubDate>Sun, 10 Nov 2019 21:40:00 +0800</pubDate><guid isPermaLink="false">tag:yunfan.github.io,2019-11-10:/blockchain-on-public-use.html</guid><category>posts</category><category>区块链</category><category>政务</category></item><item><title>关于微信车载版</title><link>https://yunfan.github.io/tencent-ai.html</link><description>&lt;p&gt;我又回来了, 经过了几年的停止更新以及懒得动手,兴趣又慢慢回来了，所以我把博客迁移&lt;/p&gt;
&lt;p&gt;到了github上 用他的pages功能托管，将来还会考虑基于ipfs发布&lt;/p&gt;
&lt;h1&gt;缘由&lt;/h1&gt;
&lt;p&gt;今天看新闻发现腾讯微信与长安合作推了个车载版的微信&lt;/p&gt;
&lt;p&gt;[腾讯推出车载版微信][https://www.solidot.org/story?sid=61856] 核心内容应该是全&lt;/p&gt;
&lt;p&gt;语音交互。&lt;/p&gt;
&lt;h1&gt;想法&lt;/h1&gt;
&lt;p&gt;关于这个新闻我觉得核心在与全语音交互，至于是否微信出品则重要性不大。但是既然是&lt;/p&gt;
&lt;p&gt;微信出了，说明他们是有这个方向考虑由此我想到一些扩展,尤其是我立刻想到了小时候&lt;/p&gt;
&lt;p&gt;看过的一个印象极深的电视剧 &lt;code&gt;霹雳游侠&lt;/code&gt; 这里面的跑车是个人工智能车，当时看来天方&lt;/p&gt;
&lt;p&gt;夜谈，以如今的技术来看，虽然达不到电视剧的效果，但是执行日常任务则问题不大。想&lt;/p&gt;
&lt;p&gt;想那些智能音箱们。&lt;/p&gt;
&lt;h2&gt;人工智能车&lt;/h2&gt;
&lt;p&gt;我觉得微信既然做车载版，索性做大点，引入人工智能，可以做得跟霹雳游侠里面那辆车&lt;/p&gt;
&lt;p&gt;那样，与车主有问有答，同时由于接入了微信，也可以接入定制的小程序，帮助车主完成&lt;/p&gt;
&lt;p&gt;各种比如导航(&lt;strong&gt;关于这个我觉得可以专门开一期博文来描述&lt;/strong&gt;),订购商品之类的任务，&lt;/p&gt;
&lt;p&gt;如果接入家里的设备 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jyf</dc:creator><pubDate>Mon, 26 Aug 2019 20:55:00 +0800</pubDate><guid isPermaLink="false">tag:yunfan.github.io,2019-08-26:/tencent-ai.html</guid><category>posts</category><category>腾讯</category><category>微信</category><category>AI</category></item><item><title>关于智能售货机</title><link>https://yunfan.github.io/intelligent-automat.html</link><description>&lt;h1&gt;缘由&lt;/h1&gt;
&lt;p&gt;公司最近进了一个所谓智能售货机 是鲜喵自助的 &lt;img alt="智能售货机" src="/images/xianmiao.jpg"&gt; &lt;/p&gt;
&lt;p&gt;由于标榜智能噱头 所以我去观察了下 发现实在是有大问题&lt;/p&gt;
&lt;h1&gt;问题&lt;/h1&gt;
&lt;p&gt;此类智能售货机近来有不少家 都是打着&lt;strong&gt;无人&lt;/strong&gt;与&lt;strong&gt;信用机制&lt;/strong&gt;的噱头 但以我看来 基本都&lt;/p&gt;
&lt;p&gt;还是在烧投资人的钱送大家吃食顺便扩大铺货量而已 为了尽可能的铺货 他们降低了单个柜子&lt;/p&gt;
&lt;p&gt;的成本 美其名曰按照信用机制 我想这里会有一些显而易见的问题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;尽管我司员工素质颇高 不会私自偷拿 但公司并非严格限制人员出入 难免会有社会人员进出
  此类人员素质并非我司能够控制 而此售货机既无锁又无摄像头 实在是容易被人混水摸鱼&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这种柜子形象普通 很容易被来访客人误认为是公司日常的招待柜子 从而导致误用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;由于入驻本身会产生一定费用 其场所也必然是选择客流量不少的地方 光是一个柜子未免可惜
  了其广告价值&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;改进建议&lt;/h1&gt;
&lt;h2&gt;有限度的信任&lt;/h2&gt;
&lt;p&gt;这里说的有限度的信任就跟共享单车一样 一开始他们实验完全不用锁 结果车子无影无踪 最后的&lt;/p&gt;
&lt;p&gt;方案则是有锁 但是不需要特别加固 所以你还是能看到有一些低素质的人破坏了锁拿回去私用 但&lt;/p&gt;
&lt;p&gt;由于比例较低 基本还是能cover的  因而我建议售货机亦可参照这种策略 从现有的柜子来说 成本 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jyf</dc:creator><pubDate>Thu, 09 Nov 2017 00:16:20 +0800</pubDate><guid isPermaLink="false">tag:yunfan.github.io,2017-11-09:/intelligent-automat.html</guid><category>posts</category><category>automat</category></item></channel></rss>